[{"path": "/obp/v5.1.0/account/check/scheme/iban", "method": "post", "description": "<p>Validate and check IBAN for errors</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "IbanAddress object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/IbanAddress"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/IbanCheckerJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/accounts/public", "method": "get", "description": "<p>Get public accounts at all banks (Anonymous access).<br />Returns accounts that contain at least one public view (a view where is_public is true)<br />For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BasicAccountsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorCannotGetAccounts"}}}}, {"path": "/obp/v5.1.0/adapter", "method": "get", "description": "<p>Get basic information about the Adapter.</p><p>Authentication is Optional</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AdapterInfoJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/api-collections/API_COLLECTION_ID/api-collection-endpoints", "method": "get", "description": "<p>Get Api Collection Endpoints By API_COLLECTION_ID.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionEndpointsJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/api-collections/featured", "method": "get", "description": "<p>Get Featured Api Collections.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionsJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/api-collections/sharable/API_COLLECTION_ID", "method": "get", "description": "<p>Get Sharable Api Collection By Id.<br />Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/api/glossary", "method": "get", "description": "<p>Get API Glossary</p><p>Returns the glossary of the API</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/GlossaryItemsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/api/versions", "method": "get", "description": "<p>Get all the scanned API Versions.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["scanned_api_versions"], "properties": {"scanned_api_versions": {"type": "array", "items": {"type": "object", "properties": {"urlPrefix": {"type": "string", "example": "obp"}, "apiStandard": {"type": "string", "example": "obp"}, "apiShortVersion": {"type": "string", "example": "v3.1.0"}, "API_VERSION": {"type": "string", "example": "v3.1.0"}}, "required": ["urlPrefix", "apiStandard", "apiShortVersion", "API_VERSION"]}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks", "method": "get", "description": "<p>Get banks on this API instance<br />Returns a list of banks supported on this server:</p><ul><li>ID used as parameter in URLs</li><li>Short and full name of bank</li><li>Logo URL</li><li>Website</li></ul><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BanksJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks", "method": "post", "description": "<p>Create a new bank (Authenticated access).</p><p>The user creating this will be automatically assigned the Role CanCreateEntitlementAtOneBank.<br />Thus the User can manage the bank they create and assign Roles to other Users.</p><p>Only SANDBOX mode<br />The settlement accounts are created specified by the bank in the POST body.<br />Name and account id are created in accordance to the next rules:<br />- Incoming account (name: Default incoming settlement account, Account ID: OBP_DEFAULT_INCOMING_ACCOUNT_ID, currency: EUR)<br />- Outgoing account (name: Default outgoing settlement account, Account ID: OBP_DEFAULT_OUTGOING_ACCOUNT_ID, currency: EUR)</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostBankJson500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostBankJson500"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/BankJson500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks", "method": "put", "description": "<p>Update an existing bank (Authenticated access).</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostBankJson500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostBankJson500"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankJson500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}", "method": "get", "description": "<p>Get the bank specified by BANK_ID<br />Returns information about a single bank specified by BANK_ID including:</p><ul><li>Bank code and full name of bank</li><li>Logo URL</li><li>Website</li></ul><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankJson500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/{CUSTOMER_ID}/attributes/CUSTOMER_ATTRIBUTE_ID", "method": "delete", "description": "<p>Delete Customer Attribute</p><p>CustomerAttributes are used to enhance the OBP Customer object with Bank specific entities.</p><p>Delete a Customer Attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/account-applications", "method": "get", "description": "<p>Get the Account Applications.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountApplicationsJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/account-applications", "method": "post", "description": "<p>Create Account Application</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountApplicationJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountApplicationJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/AccountApplicationResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/account-applications/{ACCOUNT_APPLICATION_ID}", "method": "get", "description": "<p>Get the Account Application.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ACCOUNT_APPLICATION_ID", "description": "the account application id ", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountApplicationResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/account-applications/{ACCOUNT_APPLICATION_ID}", "method": "put", "description": "<p>Update an Account Application status</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountApplicationUpdateStatusJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountApplicationUpdateStatusJson"}}, {"in": "path", "name": "ACCOUNT_APPLICATION_ID", "description": "the account application id ", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountApplicationResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/account-web-hooks", "method": "post", "description": "<p>Create an Account Webhook</p><p>Webhooks are used to call external URLs when certain events happen.</p><p>Account Webhooks focus on events around accounts.</p><p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p><p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountWebhookPostJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountWebhookPostJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/AccountWebhookJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/account-web-hooks", "method": "put", "description": "<p>Enable/Disable an Account Webhook</p><p>Webhooks are used to call external URLs when certain events happen.</p><p>Account Webhooks focus on events around accounts.</p><p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p><p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountWebhookPutJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountWebhookPutJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountWebhookJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts", "method": "get", "description": "<p>Returns the list of accounts at BANK_ID that the user has access to.<br />For each account the API returns the account ID and the views available to the user..<br />Each account must have at least one private View.</p><p>optional request parameters for filter with attributes<br />URL params example: /banks/some-bank-id/accounts?manager=John&amp;count=8</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BasicAccountsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts", "method": "post", "description": "<p>Create Account at bank specified by BANK_ID.</p><p>The User can create an Account for themself  - or -  the User that has the USER_ID specified in the POST body.</p><p>If the POST body USER_ID <em>is</em> specified, the logged in user must have the Role CanCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.</p><p>If the POST body USER_ID is <em>not</em> specified, the account will be owned by the logged in User.</p><p>The 'product_code' field SHOULD be a product_code from Product.<br />If the product_code matches a product_code from Product, account attributes will be created that match the Product Attributes.</p><p>Note: The Amount MUST be zero.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateAccountRequestJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateAccountRequestJsonV310"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CreateAccountResponseJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts-held", "method": "get", "description": "<p>Get Accounts held by the current User if even the User has not been assigned the owner View yet.</p><p>Can be used to onboard the account to the API - since all other account and transaction endpoints require views to be assigned.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts-held?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CoreAccountsHeldJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}", "method": "post", "description": "<p>Update the label for the account. The label is how the account is known to the account owner e.g. 'My savings account'</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UpdateAccountJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UpdateAccountJsonV400"}}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}", "method": "put", "description": "<p>Create Account at bank specified by BANK_ID with Id specified by ACCOUNT_ID.</p><p>The User can create an Account for themself  - or -  the User that has the USER_ID specified in the POST body.</p><p>If the PUT body USER_ID <em>is</em> specified, the logged in user must have the Role canCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.</p><p>If the PUT body USER_ID is <em>not</em> specified, the account will be owned by the logged in User.</p><p>The 'product_code' field SHOULD be a product_code from Product.<br />If the 'product_code' matches a product_code from Product, account attributes will be created that match the Product Attributes.</p><p>Note: The Amount MUST be zero.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateAccountRequestJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateAccountRequestJsonV500"}}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateAccountResponseJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account", "method": "get", "description": "<p>Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>IBAN</li><li>Available views (sorted by short_name)</li></ul><p>More details about the data moderation by the view <a href=\"#1_2_1-getViewsForBankAccount\">here</a>.</p><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />This call provides balance and other account information via delegated authentication using OAuth.</p><p>Authentication is required if the 'is_public' field in view (VIEW_ID) is not set to <code>true</code>.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ModeratedAccountJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/checkbook/orders", "method": "get", "description": "<pre><code>  Get all checkbook orders</code></pre><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CheckbookOrdersJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties", "method": "get", "description": "<p>Get the Counterparties (Explicit) for the account / view.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CounterpartiesJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties", "method": "post", "description": "<p>Create Counterparty (Explicit) for an Account.</p><p>In OBP, there are two types of Counterparty.</p><ul><li><p>Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests</p></li><li><p>Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.</p></li></ul><p>Explicit Counterparties are created for the account / view<br />They are how the user of the view (e.g. account owner) refers to the other side of the transaction</p><p>name : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>description : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>currency : counterparty account currency (e.g. EUR, GBP, USD, ...)</p><p>bank_routing_scheme : eg: bankId or bankCode or any other strings</p><p>bank_routing_address : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p><p>account_routing_scheme : eg: AccountId or AccountNumber or any other strings</p><p>account_routing_address : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p><p>other_account_secondary_routing_scheme : eg: IBAN or any other strings</p><p>other_account_secondary_routing_address : if it is an IBAN, it should be unique for each counterparty.</p><p>other_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.</p><p>other_branch_routing_address : eg: <code>branch-id-123</code> or you can leave it empty, not useful in sandbox mode.</p><p>is_beneficiary : must be set to <code>true</code> in order to send payments to this counterparty</p><p>bespoke: It supports a list of key-value, you can add it to the counterparty.</p><p>bespoke.key : any info-key you want to add to this counterparty</p><p>bespoke.value : any info-value you want to add to this counterparty</p><p>The view specified by VIEW_ID must have the canAddCounterparty permission</p><p>A minimal example for TransactionRequestType == COUNTERPARTY<br />{<br />&quot;name&quot;: &quot;Tesobe1&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;currency&quot;: &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_account_secondary_routing_address&quot;: &quot;&quot;,<br />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>A minimal example for TransactionRequestType == SEPA</p><p>{<br />&quot;name&quot;: &quot;Tesobe2&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;currency&quot;: &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;IBAN&quot;,<br />&quot;other_account_secondary_routing_address&quot;: &quot;DE89 3704 0044 0532 0130 00&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCounterpartyJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCounterpartyJson400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CounterpartyWithMetadataJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/{COUNTERPARTY_ID}", "method": "get", "description": "<p>Information returned about the Counterparty specified by COUNTERPARTY_ID:</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "COUNTERPARTY_ID", "description": "the counterparty id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CounterpartyWithMetadataJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/{COUNTERPARTY_ID}", "method": "post", "description": "<p>Delete Counterparty (Explicit) for an Account.<br />and also delete the Metadata for its counterparty.</p><p>need the view permission <code>can_delete_counterparty</code><br />Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "COUNTERPARTY_ID", "description": "the counterparty id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/credit_cards/orders", "method": "get", "description": "<pre><code>  Get status of Credit Card orders</code></pre><p>Get all orders</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CreditCardOrderStatusResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/direct-debit", "method": "post", "description": "<p>Create direct debit for an account.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostDirectDebitJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostDirectDebitJsonV400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/DirectDebitJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/funds-available", "method": "get", "description": "<p>Check Available Funds<br />Mandatory URL parameters:</p><ul><li>amount=NUMBER</li><li>currency=STRING</li></ul><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CheckFundsAvailableJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/metadata/tags", "method": "get", "description": "<p>Returns the account ACCOUNT_ID tags made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication is Mandatory</p><p>Authentication is required as the tag is linked with the user.</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountTagsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/metadata/tags", "method": "post", "description": "<p>Posts a tag about an account ACCOUNT_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>Authentication is required as the tag is linked with the user.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostAccountTagJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostAccountTagJSON"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/AccountTagJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/metadata/tags/{TAG_ID}", "method": "delete", "description": "<p>Deletes the tag TAG_ID about the account ACCOUNT_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>Authentication is required as the tag is linked with the user.</p>", "parameters": [{"in": "path", "name": "TAG_ID", "description": "The tag id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorNoViewPermission"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts", "method": "get", "description": "<p>Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID.<br />Authentication is Optional</p><p>Authentication is required if the view VIEW_ID is not public.</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OtherAccountsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}", "method": "get", "description": "<p>Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID.<br />Authentication is Optional</p><p>Authentication is required if the view is not public.</p>", "parameters": [{"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OtherAccountJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata", "method": "get", "description": "<p>Get metadata of one other account.<br />Returns only the metadata about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one transaction with ACCOUNT_ID at BANK_ID.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OtherAccountMetadataJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location", "method": "delete", "description": "<p>Delete corporate location of other bank account. Delete the geolocation of the counterparty's registered address</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location", "method": "post", "description": "<p>Add the geolocation of the counterparty's registered address</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CorporateLocationJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CorporateLocationJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location", "method": "put", "description": "<p>Update the geolocation of the counterparty's registered address</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CorporateLocationJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CorporateLocationJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url", "method": "delete", "description": "<p>Delete image url of other bank account</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url", "method": "post", "description": "<p>Add a url that points to the logo of the counterparty</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ImageUrlJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ImageUrlJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url", "method": "put", "description": "<p>Update the url that points to the logo of the counterparty</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "ImageUrlJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ImageUrlJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info", "method": "delete", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info", "method": "post", "description": "<p>Add a description of the counter party from the perpestive of the account e.g. My dentist</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "MoreInfoJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/MoreInfoJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info", "method": "put", "description": "<p>Update the more info description of the counter party from the perpestive of the account e.g. My dentist</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "MoreInfoJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/MoreInfoJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url", "method": "delete", "description": "<p>Delete open corporate url of other bank account</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url", "method": "post", "description": "<p>Add open corporates url to other bank account</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "OpenCorporateUrlJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/OpenCorporateUrlJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url", "method": "put", "description": "<p>Update open corporate url of other bank account</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "OpenCorporateUrlJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/OpenCorporateUrlJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location", "method": "delete", "description": "<p>Delete physical location of other bank account</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location", "method": "post", "description": "<p>Add geocoordinates of the counterparty's main location</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PhysicalLocationJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PhysicalLocationJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location", "method": "put", "description": "<p>Update geocoordinates of the counterparty's main location</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PhysicalLocationJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PhysicalLocationJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url", "method": "delete", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url", "method": "post", "description": "<p>A url which represents the counterparty (home page url etc.)</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UrlJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UrlJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url", "method": "put", "description": "<p>A url which represents the counterparty (home page url etc.)</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UrlJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UrlJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias", "method": "delete", "description": "<p>Deletes the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias", "method": "get", "description": "<p>Returns the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AliasJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias", "method": "post", "description": "<p>Creates a private alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "AliasJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AliasJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias", "method": "put", "description": "<p>Updates the private alias of the counterparty (AKA other account) OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "AliasJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AliasJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias", "method": "delete", "description": "<p>Deletes the public alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias", "method": "get", "description": "<p>Returns the public alias of the other account OTHER_ACCOUNT_ID.<br />Authentication is Optional<br />Authentication is Mandatory if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AliasJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias", "method": "post", "description": "<p>Creates the public alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p><p>Note: Public aliases are automatically generated for new 'other accounts / counterparties', so this call should only be used if<br />the public alias was deleted.</p><p>The VIEW_ID parameter should be a view the caller is permitted to access to and that has permission to create public aliases.</p>", "parameters": [{"in": "body", "name": "body", "description": "AliasJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AliasJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias", "method": "put", "description": "<p>Updates the public alias of the other account / counterparty OTHER_ACCOUNT_ID.</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "AliasJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AliasJSON"}}, {"in": "path", "name": "OTHER_ACCOUNT_ID", "description": "The other account id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/standing-order", "method": "post", "description": "<p>Create standing order for an account.</p><p>when -&gt; frequency = {\u2018YEARLY\u2019,\u2019MONTHLY, \u2018WEEKLY\u2019, \u2018BI-WEEKLY\u2019, DAILY\u2019}<br />when -&gt; detail = { \u2018FIRST_MONDAY\u2019, \u2018FIRST_DAY\u2019, \u2018LAST_DAY\u2019}}</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostStandingOrderJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostStandingOrderJsonV400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/StandingOrderJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types", "method": "get", "description": "<p>Returns the Transaction Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request<br />(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul><li>the required Transaction Request 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,</li><li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li><li>the threshold of that challenge.</li></ul><p>For instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestTypesJsonV140"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/ACCOUNT/transaction-requests", "method": "post", "description": "<p>When using ACCOUNT, the payee is set in the request body.</p><p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodyJsonV200 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodyJsonV200"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/ACCOUNT_OTP/transaction-requests", "method": "post", "description": "<p>When using ACCOUNT, the payee is set in the request body.</p><p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodyJsonV200 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodyJsonV200"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests", "method": "post", "description": "<p>Special instructions for COUNTERPARTY:</p><p>When using a COUNTERPARTY to create a Transaction Request, specificy the counterparty_id in the body of the request.<br />The routing details of the counterparty will be forwarded for the transfer.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodyCounterpartyJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodyCounterpartyJSON"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/FREE_FORM/transaction-requests", "method": "post", "description": "<p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodyFreeFormJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodyFreeFormJSON"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/REFUND/transaction-requests", "method": "post", "description": "<p>Either the <code>from</code> or the <code>to</code> field must be filled. Those fields refers to the information about the party that will be refunded.</p><p>In case the <code>from</code> object is used, it means that the refund comes from the part that sent you a transaction.<br />In the <code>from</code> object, you have two choices :<br />- Use <code>bank_id</code> and <code>account_id</code> fields if the other account is registered on the OBP-API<br />- Use the <code>counterparty_id</code> field in case the counterparty account is out of the OBP-API</p><p>In case the <code>to</code> object is used, it means you send a request to a counterparty to ask for a refund on a previous transaction you sent.<br />(This case is not managed by the OBP-API and require an external adapter)</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodyRefundJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodyRefundJsonV400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SANDBOX_TAN/transaction-requests", "method": "post", "description": "<p>When using SANDBOX_TAN, the payee is set in the request body.</p><p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{<br />&quot;XAF&quot;:{<br />&quot;XAF&quot;:1.0,<br />&quot;HKD&quot;:0.0135503,<br />&quot;AUD&quot;:0.00228226,<br />&quot;KRW&quot;:1.87975,<br />&quot;JOD&quot;:0.00127784,<br />&quot;GBP&quot;:0.00131092,<br />&quot;MXN&quot;:0.0396,<br />&quot;AED&quot;:0.00601555,<br />&quot;INR&quot;:0.110241,<br />&quot;XBT&quot;:2.9074795E-8,<br />&quot;JPY&quot;:0.185328,<br />&quot;USD&quot;:0.00163773,<br />&quot;ILS&quot;:0.00641333,<br />&quot;EUR&quot;:0.00152449<br />},<br />&quot;HKD&quot;:{<br />&quot;XAF&quot;:73.8049,<br />&quot;HKD&quot;:1.0,<br />&quot;AUD&quot;:0.178137,<br />&quot;KRW&quot;:143.424,<br />&quot;JOD&quot;:0.0903452,<br />&quot;GBP&quot;:0.0985443,<br />&quot;MXN&quot;:2.8067,<br />&quot;AED&quot;:0.467977,<br />&quot;INR&quot;:9.09325,<br />&quot;XBT&quot;:2.164242461E-6,<br />&quot;JPY&quot;:14.0867,<br />&quot;USD&quot;:0.127427,<br />&quot;ILS&quot;:0.460862,<br />&quot;EUR&quot;:0.112495<br />},<br />&quot;AUD&quot;:{<br />&quot;XAF&quot;:438.162,<br />&quot;HKD&quot;:5.61346,<br />&quot;AUD&quot;:1.0,<br />&quot;KRW&quot;:895.304,<br />&quot;JOD&quot;:0.556152,<br />&quot;GBP&quot;:0.609788,<br />&quot;MXN&quot;:16.0826,<br />&quot;AED&quot;:2.88368,<br />&quot;INR&quot;:50.4238,<br />&quot;XBT&quot;:1.2284055924E-5,<br />&quot;JPY&quot;:87.0936,<br />&quot;USD&quot;:0.785256,<br />&quot;ILS&quot;:2.83558,<br />&quot;EUR&quot;:0.667969<br />},<br />&quot;KRW&quot;:{<br />&quot;XAF&quot;:0.531986,<br />&quot;HKD&quot;:0.00697233,<br />&quot;AUD&quot;:0.00111694,<br />&quot;KRW&quot;:1.0,<br />&quot;JOD&quot;:6.30634E-4,<br />&quot;GBP&quot;:6.97389E-4,<br />&quot;MXN&quot;:0.0183,<br />&quot;AED&quot;:0.00320019,<br />&quot;INR&quot;:0.0586469,<br />&quot;XBT&quot;:1.4234725E-8,<br />&quot;JPY&quot;:0.0985917,<br />&quot;USD&quot;:8.7125E-4,<br />&quot;ILS&quot;:0.00316552,<br />&quot;EUR&quot;:8.11008E-4<br />},<br />&quot;JOD&quot;:{<br />&quot;XAF&quot;:782.572,<br />&quot;HKD&quot;:11.0687,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1585.68,<br />&quot;JOD&quot;:1.0,<br />&quot;GBP&quot;:1.06757,<br />&quot;MXN&quot;:30.8336,<br />&quot;AED&quot;:5.18231,<br />&quot;INR&quot;:90.1236,<br />&quot;XBT&quot;:2.3803244006E-5,<br />&quot;JPY&quot;:156.304,<br />&quot;USD&quot;:1.41112,<br />&quot;ILS&quot;:5.02018,<br />&quot;EUR&quot;:0.237707<br />},<br />&quot;GBP&quot;:{<br />&quot;XAF&quot;:762.826,<br />&quot;HKD&quot;:10.1468,<br />&quot;AUD&quot;:1.63992,<br />&quot;KRW&quot;:1433.92,<br />&quot;JOD&quot;:0.936707,<br />&quot;GBP&quot;:1.0,<br />&quot;MXN&quot;:29.242,<br />&quot;AED&quot;:4.58882,<br />&quot;INR&quot;:84.095,<br />&quot;XBT&quot;:2.2756409956E-5,<br />&quot;JPY&quot;:141.373,<br />&quot;USD&quot;:1.2493,<br />&quot;ILS&quot;:4.7002,<br />&quot;EUR&quot;:1.16278<br />},<br />&quot;MXN&quot;:{<br />&quot;XAF&quot;:25.189,<br />&quot;HKD&quot;:0.3562,<br />&quot;AUD&quot;:0.0621,<br />&quot;KRW&quot;:54.4512,<br />&quot;JOD&quot;:0.0324,<br />&quot;GBP&quot;:0.0341,<br />&quot;MXN&quot;:1.0,<br />&quot;AED&quot;:0.1688,<br />&quot;INR&quot;:3.3513,<br />&quot;XBT&quot;:8.1112586E-7,<br />&quot;JPY&quot;:4.8687,<br />&quot;USD&quot;:0.0459,<br />&quot;ILS&quot;:0.1541,<br />&quot;EUR&quot;:0.0384<br />},<br />&quot;AED&quot;:{<br />&quot;XAF&quot;:166.236,<br />&quot;HKD&quot;:2.13685,<br />&quot;AUD&quot;:0.346779,<br />&quot;KRW&quot;:312.482,<br />&quot;JOD&quot;:0.1930565,<br />&quot;GBP&quot;:0.217921,<br />&quot;MXN&quot;:5.9217,<br />&quot;AED&quot;:1.0,<br />&quot;INR&quot;:18.3255,<br />&quot;XBT&quot;:4.603349217E-6,<br />&quot;JPY&quot;:30.8081,<br />&quot;USD&quot;:0.27225,<br />&quot;ILS&quot;:0.968033,<br />&quot;EUR&quot;:0.253425<br />},<br />&quot;INR&quot;:{<br />&quot;XAF&quot;:9.07101,<br />&quot;HKD&quot;:0.109972,<br />&quot;AUD&quot;:0.0198319,<br />&quot;KRW&quot;:17.0512,<br />&quot;JOD&quot;:0.0110959,<br />&quot;GBP&quot;:0.0118913,<br />&quot;MXN&quot;:0.2983,<br />&quot;AED&quot;:0.0545671,<br />&quot;INR&quot;:1.0,<br />&quot;XBT&quot;:2.2689396E-7,<br />&quot;JPY&quot;:1.68111,<br />&quot;USD&quot;:0.0148559,<br />&quot;ILS&quot;:0.0556764,<br />&quot;EUR&quot;:0.0138287<br />},<br />&quot;XBT&quot;:{<br />&quot;XAF&quot;:3.4353824E7,<br />&quot;HKD&quot;:460448.9,<br />&quot;AUD&quot;:81168.603,<br />&quot;KRW&quot;:7.0131575E7,<br />&quot;JOD&quot;:41960.111,<br />&quot;GBP&quot;:44188.118,<br />&quot;MXN&quot;:1230503.3,<br />&quot;AED&quot;:217414.47,<br />&quot;INR&quot;:4407607.74,<br />&quot;XBT&quot;:1.0,<br />&quot;JPY&quot;:6805170.8,<br />&quot;USD&quot;:59245.918,<br />&quot;ILS&quot;:182981.21,<br />&quot;EUR&quot;:52436.431<br />},<br />&quot;JPY&quot;:{<br />&quot;XAF&quot;:5.39585,<br />&quot;HKD&quot;:0.0709891,<br />&quot;AUD&quot;:0.0114819,<br />&quot;KRW&quot;:10.1428,<br />&quot;JOD&quot;:0.00639777,<br />&quot;GBP&quot;:0.0070735,<br />&quot;MXN&quot;:0.2053,<br />&quot;AED&quot;:0.032459,<br />&quot;INR&quot;:0.594846,<br />&quot;XBT&quot;:1.47171931E-7,<br />&quot;JPY&quot;:1.0,<br />&quot;USD&quot;:0.00883695,<br />&quot;ILS&quot;:0.0320926,<br />&quot;EUR&quot;:0.00822592<br />},<br />&quot;USD&quot;:{<br />&quot;XAF&quot;:610.601,<br />&quot;HKD&quot;:7.84766,<br />&quot;AUD&quot;:1.27347,<br />&quot;KRW&quot;:1147.78,<br />&quot;JOD&quot;:0.708659,<br />&quot;GBP&quot;:0.800446,<br />&quot;MXN&quot;:21.748,<br />&quot;AED&quot;:3.6731,<br />&quot;INR&quot;:67.3135,<br />&quot;XBT&quot;:1.69154E-5,<br />&quot;JPY&quot;:113.161,<br />&quot;USD&quot;:1.0,<br />&quot;ILS&quot;:3.55495,<br />&quot;EUR&quot;:0.930886<br />},<br />&quot;ILS&quot;:{<br />&quot;XAF&quot;:155.925,<br />&quot;HKD&quot;:2.16985,<br />&quot;AUD&quot;:0.352661,<br />&quot;KRW&quot;:315.903,<br />&quot;JOD&quot;:0.199196,<br />&quot;GBP&quot;:0.212763,<br />&quot;MXN&quot;:6.4871,<br />&quot;AED&quot;:1.03302,<br />&quot;INR&quot;:17.9609,<br />&quot;XBT&quot;:5.452272147E-6,<br />&quot;JPY&quot;:31.1599,<br />&quot;USD&quot;:0.281298,<br />&quot;ILS&quot;:1.0,<br />&quot;EUR&quot;:1.19318<br />},<br />&quot;EUR&quot;:{<br />&quot;XAF&quot;:655.957,<br />&quot;HKD&quot;:8.88926,<br />&quot;AUD&quot;:1.49707,<br />&quot;KRW&quot;:1233.03,<br />&quot;JOD&quot;:0.838098,<br />&quot;GBP&quot;:0.860011,<br />&quot;MXN&quot;:26.0359,<br />&quot;AED&quot;:3.94594,<br />&quot;INR&quot;:72.3136,<br />&quot;XBT&quot;:1.9087905636E-5,<br />&quot;JPY&quot;:121.567,<br />&quot;USD&quot;:1.07428,<br />&quot;ILS&quot;:4.20494,<br />&quot;EUR&quot;:1.0<br />}<br />}</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodyJsonV200 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodyJsonV200"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON210"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SEPA/transaction-requests", "method": "post", "description": "<p>Special instructions for SEPA:</p><p>When using a SEPA Transaction Request, you specify the IBAN of a Counterparty in the body of the request.<br />The routing details (IBAN) of the counterparty will be forwarded to the core banking system for the transfer.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodySEPAJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodySEPAJsonV400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SIMPLE/transaction-requests", "method": "post", "description": "<p>Special instructions for SIMPLE:</p><p>You can transfer money to the Bank Account Number or IBAN directly.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodySimpleJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodySimpleJsonV400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge", "method": "post", "description": "<p>In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.</p><p>This endpoint totally depends on createTransactionRequest, it need get the following data from createTransactionRequest response body.</p><p>1)<code>TRANSACTION_REQUEST_TYPE</code> : is the same as createTransactionRequest request URL .</p><p>2)<code>TRANSACTION_REQUEST_ID</code> : is the <code>id</code> field in createTransactionRequest response body.</p><p>3) <code>id</code> :  is <code>challenge.id</code> field in createTransactionRequest response body.</p><p>4) <code>answer</code> : must be <code>123</code> in case that Strong Customer Authentication method for OTP challenge is dummy.<br />For instance: SANDBOX_TAN_OTP_INSTRUCTION_TRANSPORT=dummy<br />Possible values are dummy,email and sms<br />In kafka mode, the answer can be got by phone message or other SCA methods.</p><p>Note that each Transaction Request Type can have its own OTP_INSTRUCTION_TRANSPORT method.<br />OTP_INSTRUCTION_TRANSPORT methods are set in Props. See sample.props.template for instructions.</p><p>Single or Multiple authorisations</p><p>OBP allows single or multi party authorisations.</p><p>Single party authorisation:</p><p>In the case that only one person needs to authorise i.e. answer a security challenge we have the following change of state of a <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED</p><p>Multiparty authorisation:</p><p>In the case that multiple parties (n persons) need to authorise a transaction request i.e. answer security challenges, we have the followings state flow for a <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in the case of a correct answer but the user is different than expected the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If Product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In the case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute, the default number of security challenges created is one.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ChallengeAnswerJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ChallengeAnswerJson400"}}, {"in": "path", "name": "TRANSACTION_REQUEST_ID", "description": "The transaction request id", "required": true, "type": "string"}, {"in": "path", "name": "TRANSACTION_REQUEST_TYPE", "description": "The transaction request type", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON210"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests", "method": "get", "description": "<p>Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be 'owner' and the user must have access to this view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p><ul><li>Transaction Request Id</li><li>Type</li><li>Status (INITIATED, COMPLETED)</li><li>Challenge (in order to confirm the request)</li><li>From Bank / Account</li><li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li><li>Related Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges to the customer.<br />This endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.<br />The customer can proceed with the Transaction by answering the security challenge.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSONs210"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}", "method": "get", "description": "<p>Returns transaction request for transaction specified by TRANSACTION_REQUEST_ID and for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be 'owner' and the user must have access to this view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p><ul><li>Transaction Request Id</li><li>Type</li><li>Status (INITIATED, COMPLETED)</li><li>Challenge (in order to confirm the request)</li><li>From Bank / Account</li><li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li><li>Related Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges to the customer.<br />This endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.<br />The customer can proceed with the Transaction by answering the security challenge.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_REQUEST_ID", "description": "The transaction request id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON210"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions", "method": "get", "description": "<p>Returns transactions list of the account specified by ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional</p><p>Authentication is required if the view is not public.</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2024-05-15T12:58:25.377Z. NOTE! The default value is now (2024-05-15T12:58:25.377Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorFilterSortDirectionError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/double-entry-transaction", "method": "get", "description": "<p>Get Double Entry Transaction</p><p>This endpoint can be used to see the double entry transactions. It returns the <code>bank_id</code>, <code>account_id</code> and <code>transaction_id</code><br />for the debit end the credit transaction. The other side account can be a settlement account or an OBP account.</p><p>The endpoint also provide the <code>transaction_request</code> object which contains the <code>bank_id</code>, <code>account_id</code> and<br /><code>transaction_request_id</code> of the transaction request at the origin of the transaction. Please note that if none<br />transaction request is at the origin of the transaction, the <code>transaction_request</code> object will be <code>null</code>.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DoubleEntryTransactionJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments", "method": "get", "description": "<p>Returns the transaction TRANSACTION_ID comments made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionCommentsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments", "method": "post", "description": "<p>Posts a comment about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>${authenticationRequiredMessage(false)}</p><p>Authentication is required since the comment is linked with the user.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostTransactionCommentJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostTransactionCommentJSON"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionCommentJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments/{COMMENT_ID}", "method": "delete", "description": "<p>Delete the comment COMMENT_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the comment.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "COMMENT_ID", "description": "The comment id", "required": true, "type": "string"}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images", "method": "get", "description": "<p>Returns the transaction TRANSACTION_ID images made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionImagesJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images", "method": "post", "description": "<p>Posts an image about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>The image is linked with the user.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostTransactionImageJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostTransactionImageJSON"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionImageJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images/{IMAGE_ID}", "method": "delete", "description": "<p>Deletes the image IMAGE_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the image.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "IMAGE_ID", "description": "The image id", "required": true, "type": "string"}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative", "method": "delete", "description": "<p>Deletes the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative", "method": "get", "description": "<p>Returns the account owner description of the transaction <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionNarrativeJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative", "method": "post", "description": "<p>Creates a description of the transaction TRANSACTION_ID.</p><p>Note: Unlike other items of metadata, there is only one &quot;narrative&quot; per transaction accross all views.<br />If you set narrative via a view e.g. view-x it will be seen via view-y (as long as view-y has permission to see the narrative).</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionNarrativeJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionNarrativeJSON"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative", "method": "put", "description": "<p>Updates the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionNarrativeJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionNarrativeJSON"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags", "method": "get", "description": "<p>Returns the transaction TRANSACTION_ID tags made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionTagJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags", "method": "post", "description": "<p>Posts a tag about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>Authentication is required as the tag is linked with the user.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostTransactionTagJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostTransactionTagJSON"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionTagJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags/{TAG_ID}", "method": "delete", "description": "<p>Deletes the tag TAG_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.<br />Authentication via OAuth is required. The user must either have owner privileges for this account,<br />or must be the user that posted the tag.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TAG_ID", "description": "The tag id", "required": true, "type": "string"}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorNoViewPermission"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where", "method": "delete", "description": "<p>Deletes the where tag of the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The user must either have owner privileges for this account, or must be the user that posted the geo tag.</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where", "method": "get", "description": "<p>Returns the &quot;where&quot; Geo tag added to the transaction TRANSACTION_ID made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />It represents the location where the transaction has been initiated.</p><p>Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionWhereJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where", "method": "post", "description": "<p>Creates a &quot;where&quot; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostTransactionWhereJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostTransactionWhereJSON"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where", "method": "put", "description": "<p>Updates the &quot;where&quot; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostTransactionWhereJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostTransactionWhereJSON"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/other_account", "method": "get", "description": "<p>Get other account of a transaction.<br />Returns details of the other party involved in the transaction, moderated by the <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />Authentication via OAuth is required if the view is not public.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OtherAccountJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/transaction", "method": "get", "description": "<p>Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional<br />Authentication is required if the view is not public.</p>", "parameters": [{"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankAccountNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/balances", "method": "get", "description": "<p>Get the Balances for one Account of the current User at one bank.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountBalanceJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/customer-account-links", "method": "get", "description": "<p>Get Customer Account Links by ACCOUNT_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAccountLinksJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions", "method": "get", "description": "<p>Returns the list of the permissions at BANK_ID for account ACCOUNT_ID, with each time a pair composed of the user and the views that he has access to.</p><p>Authentication is Mandatory<br />and the user needs to have access to the owner view.</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PermissionsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER}/{PROVIDER_ID}", "method": "get", "description": "<p>Returns the list of the views at BANK_ID for account ACCOUNT_ID that a user identified by PROVIDER_ID at their provider PROVIDER has access to.<br />All url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER.</p><p>Authentication is Mandatory</p><p>The user needs to have access to the owner view.</p>", "parameters": [{"in": "path", "name": "PROVIDER", "description": "the user PROVIDER", "required": true, "type": "string"}, {"in": "path", "name": "PROVIDER_ID", "description": "The provider id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attribute", "method": "post", "description": "<p>Create Account Attribute</p><p>Account Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Account Attribute is linked to its Account by ACCOUNT_ID</p><p>Typical account attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountAttributeJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountAttributeJson"}}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/AccountAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/products/{PRODUCT_CODE}/attributes/{ACCOUNT_ATTRIBUTE_ID}", "method": "put", "description": "<p>Update Account Attribute</p><p>Account Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Account Attribute is linked to its Account by ACCOUNT_ID</p><p>Typical account attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountAttributeJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountAttributeJson"}}, {"in": "path", "name": "ACCOUNT_ATTRIBUTE_ID", "description": "the account attribute id ", "required": true, "type": "string"}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}/attribute", "method": "post", "description": "<p>Create Transaction Request Attribute</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestAttributeJsonV400"}}, {"in": "path", "name": "TRANSACTION_REQUEST_ID", "description": "The transaction request id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}/attributes", "method": "get", "description": "<p>Get Transaction Request Attributes</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_REQUEST_ID", "description": "The transaction request id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestAttributesResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}/attributes/ATTRIBUTE_ID", "method": "get", "description": "<p>Get Transaction Request Attribute By Id</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_REQUEST_ID", "description": "The transaction request id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transaction-requests/{TRANSACTION_REQUEST_ID}/attributes/ATTRIBUTE_ID", "method": "put", "description": "<p>Update Transaction Request Attribute</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestAttributeJsonV400"}}, {"in": "path", "name": "TRANSACTION_REQUEST_ID", "description": "The transaction request id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attribute", "method": "post", "description": "<p>Create Transaction Attribute</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionAttributeJsonV400"}}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attributes", "method": "get", "description": "<p>Get Transaction Attributes</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionAttributesResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attributes/{ACCOUNT_ATTRIBUTE_ID}", "method": "put", "description": "<p>Update Transaction Attribute</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionAttributeJsonV400"}}, {"in": "path", "name": "ACCOUNT_ATTRIBUTE_ID", "description": "the account attribute id ", "required": true, "type": "string"}, {"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}/attributes/ATTRIBUTE_ID", "method": "get", "description": "<p>Get Transaction Attribute By Id</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionAttributeResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views", "method": "get", "description": "<h1><a href=\"#views\" id=\"views\">Views</a></h1><p>Views in Open Bank Project provide a mechanism for fine grained access control and delegation to Accounts and Transactions. Account holders use the 'owner' view by default. Delegated access is made through other views for example 'accountants', 'share-holders' or 'tagging-application'. Views can be created via the API and each view has a list of entitlements.</p><p>Views on accounts and transactions filter the underlying data to redact certain fields for certain users. For instance the balance on an account may be hidden from the public. The way to know what is possible on a view is determined in the following JSON.</p><p><strong>Data:</strong> When a view moderates a set of data, some fields my contain the value <code>null</code> rather than the original value. This indicates either that the user is not allowed to see the original data or the field is empty.</p><p>There is currently one exception to this rule; the 'holder' field in the JSON contains always a value which is either an alias or the real name - indicated by the 'is_alias' field.</p><p><strong>Action:</strong> When a user performs an action like trying to post a comment (with POST API call), if he is not allowed, the body response will contain an error message.</p><p><strong>Metadata:</strong><br />Transaction metadata (like images, tags, comments, etc.) will appears <em>ONLY</em> on the view where they have been created e.g. comments posted to the public view only appear on the public view.</p><p>The other account metadata fields (like image_URL, more_info, etc.) are unique through all the views. Example, if a user edits the 'more_info' field in the 'team' view, then the view 'authorities' will show the new value (if it is allowed to do it).</p><h1><a href=\"#all\" id=\"all\">All</a></h1><p><em>Optional</em></p><p>Returns the list of the views created for account ACCOUNT_ID at BANK_ID.</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p>", "parameters": [{"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewsJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views", "method": "post", "description": "<p>Create a custom view on bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.<br />The 'alias' field in the JSON can take one of three values:</p><ul><li><em>public</em>: to use the public alias if there is one specified for the other account.</li><li><em>private</em>: to use the public alias if there is one specified for the other account.</li><li><p><em>''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p></li></ul><p>The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p><p>The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p><p>You MUST use a leading _ (underscore) in the view name because other view names are reserved for OBP <a href=\"/index#group-View-System\">system views</a>.</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateViewJsonV300 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateViewJsonV300"}}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ViewJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}", "method": "delete", "description": "<p>Deletes the custom view specified by VIEW_ID on the bank account specified by ACCOUNT_ID at bank BANK_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}", "method": "put", "description": "<p>Update an existing custom view on a bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p><p>The json sent is the same as during view creation (above), with one difference: the 'name' field<br />of a view is not editable (it is only set when a view is created)</p>", "parameters": [{"in": "body", "name": "body", "description": "UpdateViewJsonV300 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UpdateViewJsonV300"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}/account-access/grant", "method": "post", "description": "<p>Grants the User identified by USER_ID access to the view identified.</p><p>Authentication is Mandatory and the user needs to be account holder.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostAccountAccessJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostAccountAccessJsonV510"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ViewJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}/account-access/revoke", "method": "post", "description": "<p>Revoke the User identified by USER_ID access to the view identified.</p><p>Authentication is Mandatory.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostAccountAccessJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostAccountAccessJsonV510"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/RevokedJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}/user-account-access", "method": "post", "description": "<p>This endpoint is used as part of the DAuth solution to grant access to account and transaction data to a smart contract on the blockchain.</p><p>Put the smart contract address in username</p><p>For provider use &quot;dauth&quot;</p><p>This endpoint will create the (DAuth) User with username and provider if the User does not already exist.</p><p>Authentication is Mandatory and the logged in user needs to be account holder.</p><p>For information about DAuth see below:</p><details>  <summary style=\"display:list-item;cursor:s-resize;\">DAuth</summary>  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3><p>DAuth is an experimental authentication mechanism that aims to pin an ethereum or other blockchain Smart Contract to an OBP &quot;User&quot;.</p><p>In the future, it might be possible to be more specific and pin specific actors (wallets) that are acting within the smart contract, but so far, one smart contract acts on behalf of one User.</p><p>Thus, if a smart contract &quot;X&quot; calls the OBP API using the DAuth header, OBP will get or create a user called X and the call will proceed in the context of that User &quot;X&quot;.</p><p>DAuth is invoked by the REST client (caller) including a specific header (see step 3 below) in any OBP REST call.</p><p>When OBP receives the DAuth token, it creates or gets a User with a username based on the smart_contract_address and the provider based on the network_name. The combination of username and provider is unique in OBP.</p><p>If you are calling OBP-API via an API3 Airnode, the Airnode will take care of constructing the required header.</p><p>When OBP detects a DAuth header / token it first checks if the Consumer is allowed to make such a call. OBP will validate the Consumer ip address and signature etc.</p><p>Note: The DAuth flow does <em>not</em> require an explicit POST like Direct Login to create the token.</p><p>Permissions may be assigned to an OBP User at any time, via the UserAuthContext, Views, Entitlements to Roles or Consents.</p><p>Note: <em>DAuth is NOT enabled on this instance!</em></p><p>Note: <em>The DAuth client is responsible for creating a token which will be trusted by OBP absolutely</em>!</p><p>To use DAuth:</p><h3><a href=\"#1-configure-obp-api-to-accept-dauth\" id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept DAuth.</a></h3><p>Set up properties in your props file</p><pre><code># -- DAuth --------------------------------------# Define secret used to validate JWT token# jwt.public_key_rsa=path-to-the-pem-file# Enable/Disable DAuth communication at all# In case isn't defined default value is false# allow_dauth=false# Define comma separated list of allowed IP addresses# dauth.host=127.0.0.1# -------------------------------------- DAuth--</code></pre><p>Please keep in mind that property jwt.public_key_rsa is used to validate JWT token to check it is not changed or corrupted during transport.</p><h3><a href=\"#2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create / have access to a JWT</a></h3><p>The following videos are available:<br />* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p><p>HEADER:ALGORITHM &amp; TOKEN TYPE</p><pre><code>{  &quot;alg&quot;: &quot;RS256&quot;,  &quot;typ&quot;: &quot;JWT&quot;}</code></pre><p>PAYLOAD:DATA</p><pre><code>{  &quot;smart_contract_address&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,  &quot;network_name&quot;: &quot;AIRNODE.TESTNET.ETHEREUM&quot;,  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,  &quot;request_id&quot;: &quot;0Xe876987694328763492876348928736497869273649&quot;}</code></pre><p>VERIFY SIGNATURE</p><pre><code>RSASHA256(  base64UrlEncode(header) + &quot;.&quot; +  base64UrlEncode(payload),<p>) your-RSA-key-pair</p></code></pre><p>Here is an example token:</p><pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</code></pre><h3><a href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\">3) Try a REST call using the header</a></h3><p>Using your favorite http client:</p><p>GET <a href=\"https://test.openbankproject.com/obp/v3.0.0/users/current\">https://test.openbankproject.com/obp/v3.0.0/users/current</a></p><p>Body</p><p>Leave Empty!</p><p>Headers:</p><pre><code>   DAuth: your-jwt-from-step-above</code></pre><p>Here is it all together:</p><p>GET <a href=\"https://test.openbankproject.com/obp/v3.0.0/users/current\">https://test.openbankproject.com/obp/v3.0.0/users/current</a> HTTP/1.1<br />Host: localhost:8080<br />User-Agent: curl/7.47.0<br />Accept: <em>/</em><br />DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p><p>CURL example</p><pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k' https://test.openbankproject.com/obp/v3.0.0/users/current</code></pre><p>You should receive a response like:</p><pre><code>{    &quot;user_id&quot;: &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,    &quot;email&quot;: &quot;&quot;,    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,    &quot;provider&quot;: &quot;ETHEREUM&quot;,    &quot;username&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,    &quot;entitlements&quot;: {        &quot;list&quot;: []    }}</code></pre><h3><a href=\"#under-the-hood\" id=\"under-the-hood\">Under the hood</a></h3><p>The file, dauth.scala handles the DAuth,</p><p>We:</p><pre><code>-&gt; Check if Props allow_dauth is true  -&gt; Check if DAuth header exists    -&gt; Check if getRemoteIpAddress is OK      -&gt; Look for &quot;token&quot;        -&gt; parse the JWT token and getOrCreate the user          -&gt; get the data of the user</code></pre><h3><a href=\"#more-information\" id=\"more-information\">More information</a></h3><p>Parameter names and values are case sensitive.<br />Each parameter MUST NOT appear more than once per request.</p></details><p><br></br></p>", "parameters": [{"in": "body", "name": "body", "description": "PostCreateUserAccountAccessJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCreateUserAccountAccessJsonV400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/NotSupportedYet"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/account_ids/private", "method": "get", "description": "<p>Returns only the list of accounts ids at BANK_ID that the user has access to.</p><p>Each account must have at least one private View.</p><p>For each account the API returns its account ID.</p><p>If you want to see more information on the Views, use the Account Detail call.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts/account_ids/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountsIdsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/private", "method": "get", "description": "<p>Returns the minimal list of private accounts at BANK_ID that the user has access to.<br />For each account, the API returns the ID, routing addresses and the views available to the current user.</p><p>If you want to see more information on the Views, use the Account Detail call.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CoreAccountsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/accounts/public", "method": "get", "description": "<p>Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BasicAccountsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/adapter", "method": "get", "description": "<p>Get basic information about the Adapter listening on behalf of this bank.</p><p>Authentication is Optional</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AdapterInfoJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms", "method": "get", "description": "<p>Returns information about ATMs for a single bank specified by BANK_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li></ul><p>Pagination:</p><p>By default, 100 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmsJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms", "method": "head", "description": "<p>Head Bank ATMS.</p><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms", "method": "post", "description": "<p>Create ATM.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostAtmJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostAtmJsonV510"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/AtmJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}", "method": "delete", "description": "<p>Delete ATM.</p><p>This will also delete all its attributes.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}", "method": "get", "description": "<p>Returns information about ATM for a single bank specified by BANK_ID and ATM_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li><li>ATM Attributes</li></ul><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}", "method": "put", "description": "<p>Update ATM.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AtmJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AtmJsonV510"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/accessibility-features", "method": "put", "description": "<p>Update ATM Accessibility Features.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccessibilityFeaturesJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccessibilityFeaturesJson"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmAccessibilityFeaturesJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/attributes", "method": "get", "description": "<p>Get ATM Attributes</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmAttributesResponseJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/attributes", "method": "post", "description": "<p>Create ATM Attribute</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AtmAttributeJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AtmAttributeJsonV510"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/AtmAttributeResponseJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/attributes/{ATM_ATTRIBUTE_ID}", "method": "delete", "description": "<p>Delete ATM Attribute</p><p>Delete a Atm Attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ATM_ATTRIBUTE_ID", "description": "the atm attribute id", "required": true, "type": "string"}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/attributes/{ATM_ATTRIBUTE_ID}", "method": "get", "description": "<p>Get ATM Attribute By ATM_ATTRIBUTE_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ATM_ATTRIBUTE_ID", "description": "the atm attribute id", "required": true, "type": "string"}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmAttributeResponseJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/attributes/{ATM_ATTRIBUTE_ID}", "method": "put", "description": "<p>Update ATM Attribute.</p><p>Update an ATM Attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AtmAttributeJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AtmAttributeJsonV510"}}, {"in": "path", "name": "ATM_ATTRIBUTE_ID", "description": "the atm attribute id", "required": true, "type": "string"}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmAttributeResponseJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/location-categories", "method": "put", "description": "<p>Update ATM Location Categories.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AtmLocationCategoriesJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AtmLocationCategoriesJsonV400"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmLocationCategoriesResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/notes", "method": "put", "description": "<p>Update ATM Notes.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AtmNotesJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AtmNotesJsonV400"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmNotesResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/services", "method": "put", "description": "<p>Update ATM Services.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AtmServicesJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AtmServicesJsonV400"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmServicesResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/supported-currencies", "method": "put", "description": "<p>Update ATM Supported Currencies.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "SupportedCurrenciesJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/SupportedCurrenciesJson"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmSupportedCurrenciesJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/atms/{ATM_ID}/supported-languages", "method": "put", "description": "<p>Update ATM Supported Languages.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "SupportedLanguagesJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/SupportedLanguagesJson"}}, {"in": "path", "name": "ATM_ID", "description": "the atm id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AtmSupportedLanguagesJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute", "method": "post", "description": "<p>Create Bank Attribute</p><p>Typical product attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "BankAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/BankAttributeJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/BankAttributeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/account", "method": "delete", "description": "<p>Delete Account Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/card", "method": "delete", "description": "<p>Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/customer", "method": "delete", "description": "<p>Delete Customer Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/product", "method": "delete", "description": "<p>Delete Product Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction", "method": "delete", "description": "<p>Delete Transaction Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction-request", "method": "delete", "description": "<p>Delete Transaction Request Attribute Definition by ATTRIBUTE_DEFINITION_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/Full"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/account", "method": "get", "description": "<p>Get Account Attribute Definition</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionsResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/account", "method": "put", "description": "<p>Create or Update Account Attribute Definition</p><p>The category field must be Account</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AttributeDefinitionJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/bank", "method": "put", "description": "<p>Create or Update Bank Attribute Definition</p><p>The category field must be Bank</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AttributeDefinitionJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/card", "method": "get", "description": "<p>Get Card Attribute Definition</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionsResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/card", "method": "put", "description": "<p>Create or Update Card Attribute Definition</p><p>The category field must be Card</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AttributeDefinitionJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/customer", "method": "get", "description": "<p>Get Customer Attribute Definition</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionsResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/customer", "method": "put", "description": "<p>Create or Update Customer Attribute Definition</p><p>The category field must be one of: Customer</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AttributeDefinitionJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/product", "method": "get", "description": "<p>Get Product Attribute Definition</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionsResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/product", "method": "put", "description": "<p>Create or Update Product Attribute Definition</p><p>The category field must be Product</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AttributeDefinitionJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/transaction", "method": "get", "description": "<p>Get Transaction Attribute Definition</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionsResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/transaction", "method": "put", "description": "<p>Create or Update Transaction Attribute Definition</p><p>The category field must be Transaction</p><p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AttributeDefinitionJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/transaction-request", "method": "get", "description": "<p>Get Transaction Request Attribute Definition</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionsResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attribute-definitions/transaction-request", "method": "put", "description": "<p>Create or Update Transaction Request Attribute Definition</p><p>The category field must be TransactionRequest</p><p>The type field must be one of: DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AttributeDefinitionJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attributes", "method": "get", "description": "<p>Get Bank Attributes</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAttributesResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attributes/BANK_ATTRIBUTE_ID", "method": "delete", "description": "<p>Delete Bank Attribute</p><p>Delete a Bank Attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attributes/BANK_ATTRIBUTE_ID", "method": "get", "description": "<p>Get Bank Attribute By BANK_ATTRIBUTE_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankAttributeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/attributes/BANK_ATTRIBUTE_ID", "method": "put", "description": "<p>Update Bank Attribute.</p><p>Update one Bak Attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "BankAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/BankAttributeJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AttributeDefinitionJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/balances", "method": "get", "description": "<p>Get the Balances for the Accounts of the current User at one bank.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountsBalancesJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/branches", "method": "get", "description": "<p>Returns information about branches for a single bank specified by BANK_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li><li>Structured opening hours</li><li>Accessible flag</li><li>Branch Type</li><li>More Info</li></ul><p>Pagination:</p><p>By default, 50 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination<br />You can also use the follow url query parameters:</p><ul><li><p>city - string, find Branches those in this city, optional</p></li><li><p>withinMetersOf - number, find Branches within given meters distance, optional</p></li><li>nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional</li><li>nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional</li></ul><p>note: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.</p><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BranchesJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/branches", "method": "post", "description": "<p>Create Branch for the Bank.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "BranchJsonV300 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/BranchJsonV300"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/BranchJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}", "method": "delete", "description": "<p>Delete Branch from given Bank.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BRANCH_ID", "description": "The branch id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/branches/{BRANCH_ID}", "method": "get", "description": "<p>Returns information about a single Branch specified by BANK_ID and BRANCH_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under.</li></ul><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "BRANCH_ID", "description": "The branch id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BranchJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBranchNotFoundByBranchId"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}", "method": "delete", "description": "<p>Revoke Consent specified by CONSENT_ID</p><p>There are a few reasons you might need to revoke an application\u2019s access to a user\u2019s account:<br />- The user explicitly wishes to revoke the application\u2019s access<br />- You as the service provider have determined an application is compromised or malicious, and want to disable it<br />- etc.</p><p>OBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.<br />The status of the token is changed to &quot;REVOKED&quot; so the next time the revoked client makes a request, their token will fail to validate.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CONSENT_ID", "description": "the consent id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}", "method": "put", "description": "<p>This endpoint is used to update the Status of Consent.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutConsentStatusJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutConsentStatusJsonV400"}}, {"in": "path", "name": "CONSENT_ID", "description": "the consent id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentChallengeJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}/challenge", "method": "post", "description": "<p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p><p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p><p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p><p>Example of POST JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"m&#97;i&#x6c;t&#111;&#58;&#x65;&#x76;&#101;&#x6c;ine&#x40;&#x65;&#x78;am&#112;&#x6c;&#x65;&#x2e;&#99;&#111;&#109;\">&#x65;&#x76;e&#x6c;i&#x6e;&#x65;&#x40;&#x65;&#x78;&#97;m&#x70;le&#x2e;&#99;&#x6f;&#x6d;</a>&quot;,<br />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;: 3600<br />}<br />Please note that only optional fields are: consumer_id, valid_from and time_to_live.<br />In case you omit they the default values are used:<br />consumer_id = consumer of current user<br />valid_from = current time<br />time_to_live = consents.max_time_to_live</p><p>This endpoint is used to confirm a Consent previously created.</p><p>The User must supply a code that was sent out of band (OOB) for example via an SMS.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostConsentChallengeJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostConsentChallengeJsonV310"}}, {"in": "path", "name": "CONSENT_ID", "description": "the consent id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentChallengeJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/consents/{CONSENT_ID}/user-update-request", "method": "put", "description": "<p>This endpoint is used to add the User of Consent.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutConsentUserJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutConsentUserJsonV400"}}, {"in": "path", "name": "CONSENT_ID", "description": "the consent id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentChallengeJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/crm-events", "method": "get", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CrmEventsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/currencies", "method": "get", "description": "<p>Get Currencies specified by BANK_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CurrenciesJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customer-account-links", "method": "post", "description": "<p>Link a Customer to a Account</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateCustomerAccountLinkJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateCustomerAccountLinkJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAccountLinkJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID", "method": "delete", "description": "<p>Delete Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID", "method": "get", "description": "<p>Get Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAccountLinkJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID", "method": "put", "description": "<p>Update Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UpdateCustomerAccountLinkJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UpdateCustomerAccountLinkJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAccountLinkJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customer/{CUSTOMER_ID}/messages", "method": "post", "description": "<p>Create a message for the customer specified by CUSTOMER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AddCustomerMessageJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AddCustomerMessageJson"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customer/messages", "method": "get", "description": "<p>Get messages for the logged in customer<br />Messages sent to the currently authenticated user.</p><p>Authentication via OAuth is required.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerMessagesJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers", "method": "get", "description": "<p>Get Customers at Bank.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJSONsV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers", "method": "post", "description": "<p>The Customer resource stores the customer number (which is set by the backend), legal name, email, phone number, their date of birth, relationship status, education attained, a url for a profile image, KYC status etc.<br />Dates need to be in the format 2013-01-21T23:08:00Z</p><p>Note: If you need to set a specific customer number, use the Update Customer Number endpoint after this call.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCustomerJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCustomerJsonV500"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers-minimal", "method": "get", "description": "<p>Get Customers Minimal at Bank.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomersMinimalJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserCustomerLinksNotFoundForUser"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}", "method": "get", "description": "<p>Gets the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerWithAttributesJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/address", "method": "post", "description": "<p>Create an Address for a Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCustomerAddressJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCustomerAddressJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAddressJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses", "method": "get", "description": "<p>Get the Addresses of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAddressesJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses/{CUSTOMER_ADDRESS_ID}", "method": "delete", "description": "<p>Delete an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ADDRESS_ID", "description": "the customer address id", "required": true, "type": "string"}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/addresses/{CUSTOMER_ADDRESS_ID}", "method": "put", "description": "<p>Update an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCustomerAddressJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCustomerAddressJsonV310"}}, {"in": "path", "name": "CUSTOMER_ADDRESS_ID", "description": "the customer address id", "required": true, "type": "string"}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAddressJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attribute", "method": "post", "description": "<p>Create Customer Attribute</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CustomerAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CustomerAttributeJsonV400"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAttributeResponseJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attributes", "method": "get", "description": "<p>Get Customer Attributes</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAttributesResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attributes/ATTRIBUTE_ID", "method": "get", "description": "<p>Get Customer Attribute By Id</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAttributeResponseJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/attributes/CUSTOMER_ATTRIBUTE_ID", "method": "put", "description": "<p>Update Customer Attribute</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CustomerAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CustomerAttributeJsonV400"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAttributeResponseJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/branch", "method": "put", "description": "<p>Update the Branch of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerBranchJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerBranchJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/correlated-users", "method": "get", "description": "<p>Get Correlated User Info by CUSTOMER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAndUsersWithAttributesResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-limit", "method": "put", "description": "<p>Update the credit limit of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerCreditLimitJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerCreditLimitJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/credit-rating-and-source", "method": "put", "description": "<p>Update the credit rating and source of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerCreditRatingAndSourceJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerCreditRatingAndSourceJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/customer-account-links", "method": "get", "description": "<p>Get Customer Account Links by CUSTOMER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerAccountLinksJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/data", "method": "put", "description": "<p>Update the other data of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerDataJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerDataJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/email", "method": "put", "description": "<p>Update an email of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerEmailJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerEmailJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/identity", "method": "put", "description": "<p>Update the identity data of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerIdentityJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerIdentityJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}", "method": "put", "description": "<p>Add a KYC check for the customer specified by CUSTOMER_ID. KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostKycCheckJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostKycCheckJSON"}}, {"in": "path", "name": "KYC_CHECK_ID", "description": "The kyc check id", "required": true, "type": "string"}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycCheckJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}", "method": "put", "description": "<p>Add a KYC document for the customer specified by CUSTOMER_ID. KYC Documents contain the document type (e.g. passport), place of issue, expiry etc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostKycDocumentJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostKycDocumentJSON"}}, {"in": "path", "name": "KYC_DOCUMENT_ID", "description": "The kyc document id", "required": true, "type": "string"}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycDocumentJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}", "method": "put", "description": "<p>Add some KYC media for the customer specified by CUSTOMER_ID. KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostKycMediaJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostKycMediaJSON"}}, {"in": "path", "name": "KYC_MEDIA_ID", "description": "The kyc media id", "required": true, "type": "string"}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycMediaJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses", "method": "put", "description": "<p>Add a kyc_status for the customer specified by CUSTOMER_ID. KYC Status is a timeline of the KYC status of the customer</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostKycStatusJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostKycStatusJSON"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycStatusJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/messages", "method": "get", "description": "<p>Get messages for the customer specified by CUSTOMER_ID<br />Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerMessagesJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/messages", "method": "post", "description": "<p>Create a message for the customer specified by CUSTOMER_ID<br />Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateMessageJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateMessageJsonV400"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/mobile-number", "method": "put", "description": "<p>Update the mobile number of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerMobilePhoneNumberJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerMobilePhoneNumberJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/number", "method": "put", "description": "<p>Update the number of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutUpdateCustomerNumberJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutUpdateCustomerNumberJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles", "method": "get", "description": "<p>Get social media handles for a customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SocialMediasJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles", "method": "post", "description": "<p>Create a customer social media handle for the customer specified by CUSTOMER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "SocialMediaJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/SocialMediaJSON"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residence", "method": "post", "description": "<p>Create a Tax Residence for a Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostTaxResidenceJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostTaxResidenceJsonV310"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TaxResidenceV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax-residences", "method": "get", "description": "<p>Get the Tax Residences of the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TaxResidenceJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/tax_residencies/{TAX_RESIDENCE_ID}", "method": "delete", "description": "<p>Delete a Tax Residence of the Customer specified by TAX_RESIDENCE_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TAX_RESIDENCE_ID", "description": "the tax residence id", "required": true, "type": "string"}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/customer-number", "method": "post", "description": "<p>Gets the Customer specified by CUSTOMER_NUMBER.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCustomerNumberJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCustomerNumberJsonV310"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerWithAttributesJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/customer-number-query/overview", "method": "post", "description": "<p>Gets the Customer Overview specified by customer_number and bank_code.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCustomerOverviewJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCustomerOverviewJsonV500"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerOverviewJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/customers/customer-number-query/overview-flat", "method": "post", "description": "<p>Gets the Customer Overview Flat specified by customer_number and bank_code.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCustomerOverviewJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCustomerOverviewJsonV500"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerOverviewFlatJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/entitlements", "method": "get", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/firehose/accounts/{ACCOUNT_ID}/views/{VIEW_ID}/transactions", "method": "get", "description": "<p>Get Transactions for an Account that has a firehose View.</p><p>Allows bulk access to an account's transactions.<br />User must have the CanUseFirehoseAtAnyBank Role</p><p>To find ACCOUNT_IDs, use the getFirehoseAccountsAtOneBank call.</p><p>For VIEW_ID try 'owner'</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2024-05-15T12:58:25.377Z. NOTE! The default value is now (2024-05-15T12:58:25.377Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/firehose/accounts/views/{VIEW_ID}", "method": "get", "description": "<p>Get Accounts which have a firehose view assigned to them.</p><p>This endpoint allows bulk access to accounts.</p><p>Requires the CanUseFirehoseAtAnyBank Role</p><p>To be shown on the list, each Account must have a firehose View linked to it.</p><p>A firehose view has is_firehose = true</p><p>For VIEW_ID try 'owner'</p><p>optional request parameters for filter with attributes<br />URL params example:<br />/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8</p><p>to invalid Browser cache, add timestamp query parameter as follow, the parameter name must be <code>_timestamp_</code><br />URL params example:<br /><code>/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8&amp;_timestamp_=1596762180358</code></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ModeratedFirehoseAccountsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/firehose/customers", "method": "get", "description": "<p>Get Customers that has a firehose View.</p><p>Allows bulk access to customers.<br />User must have the CanUseFirehoseAtAnyBank Role</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2024-05-15T12:58:25.403Z. NOTE! The default value is now (2024-05-15T12:58:25.403Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJSONs"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/fx", "method": "put", "description": "<p>Create or Update Fx for the Bank.</p><p>Example:</p><p>\u201cfrom_currency_code\u201d:\u201cEUR\u201d,<br />\u201cto_currency_code\u201d:\u201cUSD\u201d,<br />\u201cconversion_value\u201d: 1.136305,<br />\u201cinverse_conversion_value\u201d: 1 / 1.136305 = 0.8800454103431737,</p><p>Thus 1 Euro = 1.136305 US Dollar<br />and<br />1 US Dollar = 0.8800 Euro</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "FXRateJsonV220 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/FXRateJsonV220"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FXRateJsonV220"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/fx/{FROM_CURRENCY_CODE}/{TO_CURRENCY_CODE}", "method": "get", "description": "<p>Get the latest FX rate specified by BANK_ID, FROM_CURRENCY_CODE and TO_CURRENCY_CODE</p><p>OBP may try different sources of FX rate information depending on the Connector in operation.</p><p>For example we want to convert EUR =&gt; USD:</p><p>OBP will:<br />1st try - Connector (database, core banking system or external FX service)<br />2nd try part 1 - fallbackexchangerates/eur.json<br />2nd try part 2 - fallbackexchangerates/usd.json (the inverse rate is used)<br />3rd try - Hardcoded map of FX rates.</p><p><img src=\"https://user-images.githubusercontent.com/485218/60005085-1eded600-966e-11e9-96fb-798b102d9ad0.png\" alt=\"FX Flow\" /></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "TO_CURRENCY_CODE", "description": "The to currency code", "required": true, "type": "string"}, {"in": "path", "name": "FROM_CURRENCY_CODE", "description": "The from currency code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FXRateJsonV220"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidISOCurrencyCode"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/management/historical/transactions", "method": "post", "description": "<p>Create historical transactions at one Bank</p><p>Use this endpoint to create transactions between any two accounts at the same bank.<br />From account and to account must be at the same bank.<br />Example:<br />{<br />&quot;from_account_id&quot;: &quot;1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;to_account_id&quot;: &quot;2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>This call is experimental.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostHistoricalTransactionAtBankJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostHistoricalTransactionAtBankJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/PostHistoricalTransactionResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/meetings", "method": "get", "description": "<p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MeetingsJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/meetings", "method": "post", "description": "<p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateMeetingJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateMeetingJsonV310"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/MeetingJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/meetings/{MEETING_ID}", "method": "get", "description": "<p>Get Meeting specified by BANK_ID / MEETING_ID<br />Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "MEETING_ID", "description": "the meeting id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MeetingJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/my/consent-infos", "method": "get", "description": "<p>This endpoint gets the Consents that the current User created.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentInfosJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/my/consents", "method": "get", "description": "<p>This endpoint gets the Consents that the current User created.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/my/consents/{CONSENT_ID}/revoke", "method": "get", "description": "<p>Revoke Consent for current user specified by CONSENT_ID</p><p>There are a few reasons you might need to revoke an application\u2019s access to a user\u2019s account:<br />- The user explicitly wishes to revoke the application\u2019s access<br />- You as the service provider have determined an application is compromised or malicious, and want to disable it<br />- etc.</p><p>Please note that this endpoint only supports the case:: &quot;The user explicitly wishes to revoke the application\u2019s access&quot;</p><p>OBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.<br />The status of the token is changed to &quot;REVOKED&quot; so the next time the revoked client makes a request, their token will fail to validate.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CONSENT_ID", "description": "the consent id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/my/consents/EMAIL", "method": "post", "description": "<p>This endpoint starts the process of creating a Consent.</p><p>The Consent is created in an INITIATED state.</p><p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot;,&quot;EMAIL&quot; or &quot;IMPLICIT&quot;. &quot;EMAIL&quot; is used for testing purposes. OBP mapped mode &quot;IMPLICIT&quot; is &quot;EMAIL&quot;.<br />Other mode, bank can decide it in the connector method 'getConsentImplicitSCA'.</p><p>When the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p><p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p><p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p><p>Example of POST JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#x6d;&#97;&#105;&#x6c;&#116;&#111;&#x3a;&#x65;&#118;&#101;&#x6c;&#x69;n&#x65;&#64;&#x65;&#120;&#97;&#109;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#x6d;\">&#101;&#x76;&#x65;&#x6c;&#x69;&#x6e;&#101;@&#x65;&#x78;&#97;&#109;&#112;&#108;&#x65;.&#99;&#x6f;m</a>&quot;,<br />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;: 3600<br />}<br />Please note that only optional fields are: consumer_id, valid_from and time_to_live.<br />In case you omit they the default values are used:<br />consumer_id = consumer of current user<br />valid_from = current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;phone_number&quot;: &quot;+49 170 1234567&quot;<br />}</p><p>Please note that consumer_id is optional field<br />Example 2:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;phone_number&quot;: &quot;+49 170 1234567&quot;<br />}</p><p>Please note if everything=false you need to explicitly specify views and entitlements<br />Example 3:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;phone_number&quot;: &quot;+49 170 1234567&quot;<br />}</p>", "parameters": [{"in": "body", "name": "body", "description": "PostConsentEmailJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostConsentEmailJsonV310"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/my/consents/IMPLICIT", "method": "post", "description": "<p>This endpoint starts the process of creating a Consent.</p><p>The Consent is created in an INITIATED state.</p><p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot;,&quot;EMAIL&quot; or &quot;IMPLICIT&quot;. &quot;EMAIL&quot; is used for testing purposes. OBP mapped mode &quot;IMPLICIT&quot; is &quot;EMAIL&quot;.<br />Other mode, bank can decide it in the connector method 'getConsentImplicitSCA'.</p><p>When the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p><p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p><p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p><p>Example of POST JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"m&#97;i&#x6c;t&#111;&#58;&#101;v&#x65;&#108;&#x69;&#110;&#101;@e&#x78;&#x61;&#109;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#x6d;\">&#x65;v&#x65;&#x6c;&#x69;&#110;&#x65;&#64;&#x65;&#120;&#x61;m&#112;&#108;&#x65;.&#x63;&#111;&#x6d;</a>&quot;,<br />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;: 3600<br />}<br />Please note that only optional fields are: consumer_id, valid_from and time_to_live.<br />In case you omit they the default values are used:<br />consumer_id = consumer of current user<br />valid_from = current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />}</p><p>Please note that consumer_id is optional field<br />Example 2:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />}</p><p>Please note if everything=false you need to explicitly specify views and entitlements<br />Example 3:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />}</p>", "parameters": [{"in": "body", "name": "body", "description": "PostConsentImplicitJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostConsentImplicitJsonV310"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/my/consents/SMS", "method": "post", "description": "<p>This endpoint starts the process of creating a Consent.</p><p>The Consent is created in an INITIATED state.</p><p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot;,&quot;EMAIL&quot; or &quot;IMPLICIT&quot;. &quot;EMAIL&quot; is used for testing purposes. OBP mapped mode &quot;IMPLICIT&quot; is &quot;EMAIL&quot;.<br />Other mode, bank can decide it in the connector method 'getConsentImplicitSCA'.</p><p>When the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.</p><p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p><p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p><p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p><p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p><p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />For example:<br />GET /obp/v4.0.0/users/current HTTP/1.1<br />Host: 127.0.0.1:8080<br />Consent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />EtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />zcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />tNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p><p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />cache-control: no-cache</p><p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p><p>Example of POST JSON:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;o&#x3a;&#x65;&#x76;&#x65;&#108;&#x69;&#110;&#101;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#x65;.&#x63;&#x6f;&#109;\">&#101;&#118;&#x65;&#108;&#105;&#x6e;&#x65;&#x40;e&#120;&#x61;&#109;&#x70;&#x6c;&#101;&#x2e;&#99;&#111;&#x6d;</a>&quot;,<br />&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />&quot;time_to_live&quot;: 3600<br />}<br />Please note that only optional fields are: consumer_id, valid_from and time_to_live.<br />In case you omit they the default values are used:<br />consumer_id = consumer of current user<br />valid_from = current time<br />time_to_live = consents.max_time_to_live</p><p>Authentication is Mandatory</p><p>Example 1:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"m&#97;&#x69;l&#116;&#x6f;&#58;&#x65;&#118;el&#105;&#x6e;&#101;@&#101;&#120;a&#109;&#112;l&#101;&#x2e;&#99;&#111;&#109;\">e&#118;e&#108;&#x69;&#110;e&#64;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#109;</a>&quot;<br />}</p><p>Please note that consumer_id is optional field<br />Example 2:<br />{<br />&quot;everything&quot;: true,<br />&quot;views&quot;: [],<br />&quot;entitlements&quot;: [],<br />&quot;email&quot;: &quot;<a href=\"&#x6d;&#97;&#105;l&#116;&#x6f;&#x3a;&#x65;&#118;e&#x6c;in&#x65;&#64;ex&#x61;&#109;pl&#x65;&#46;&#99;&#111;m\">&#101;&#x76;&#101;&#108;&#105;&#110;&#101;@&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;e&#46;&#x63;&#x6f;&#x6d;</a>&quot;<br />}</p><p>Please note if everything=false you need to explicitly specify views and entitlements<br />Example 3:<br />{<br />&quot;everything&quot;: false,<br />&quot;views&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />&quot;view_id&quot;: &quot;owner&quot;<br />}<br />],<br />&quot;entitlements&quot;: [<br />{<br />&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />}<br />],<br />&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />&quot;email&quot;: &quot;<a href=\"&#109;&#x61;i&#108;t&#111;&#58;e&#118;&#x65;&#x6c;&#105;&#x6e;&#101;&#x40;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;\">&#101;&#x76;&#101;l&#x69;&#110;e&#x40;&#x65;&#x78;&#x61;&#109;&#112;l&#x65;&#46;&#99;o&#x6d;</a>&quot;<br />}</p>", "parameters": [{"in": "body", "name": "body", "description": "PostConsentPhoneJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostConsentPhoneJsonV310"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/my/customers", "method": "get", "description": "<p>Returns a list of Customers at the Bank that are linked to the currently authenticated User.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJSONs"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}", "method": "get", "description": "<p>Returns information about the financial Product Collection specified by BANK_ID and COLLECTION_CODE:</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "COLLECTION_CODE", "description": "the collection code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductCollectionJsonTreeV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/product-collections/{COLLECTION_CODE}", "method": "put", "description": "<p>Create or Update a Product Collection at the Bank.</p><p>Use Product Collections to create Product &quot;Baskets&quot;, &quot;Portfolios&quot;, &quot;Indices&quot;, &quot;Collections&quot;, &quot;Underlyings-lists&quot;, &quot;Buckets&quot; etc. etc.</p><p>There is a many to many relationship between Products and Product Collections:</p><ul><li><p>A Product can exist in many Collections</p></li><li><p>A Collection can contain many Products.</p></li></ul><p>A collection has collection code, one parent Product and one or more child Products.</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p></li></ul><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutProductCollectionsV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutProductCollectionsV310"}}, {"in": "path", "name": "COLLECTION_CODE", "description": "the collection code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductCollectionsJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/product-tree/{PRODUCT_CODE}", "method": "get", "description": "<p>Returns information about a particular financial product specified by BANK_ID and PRODUCT_CODE<br />and it's parent product(s) recursively as specified by parent_product_code.</p><p>Each product includes the following information.</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>Category</li><li>Family</li><li>Super Family</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>License: The licence under which this product data is released. Licence can be an Open Data licence such as Open Data Commons Public Domain Dedication and License (PDDL) or Copyright etc.</li></ul><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductTreeJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorProductNotFoundByProductCode"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products", "method": "get", "description": "<p>Returns information about the financial products offered by a bank specified by BANK_ID including:</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>More info URL</li><li>Terms And Conditions URL</li><li>Description</li><li>Terms and Conditions</li><li>License the data under this endpoint is released under</li></ul><p>Can filter with attributes name and values.<br />URL params example: /banks/some-bank-id/products?manager=John&amp;count=8</p><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}", "method": "get", "description": "<p>Returns information about a financial Product offered by the bank specified by BANK_ID and PRODUCT_CODE including:</p><ul><li>Name</li><li>Code</li><li>Parent Product Code</li><li>More info URL</li><li>Description</li><li>Terms and Conditions</li><li>Description</li><li>Meta</li><li>Attributes</li><li>Fees</li></ul><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}", "method": "put", "description": "<p>Create or Update Product for the Bank.</p><p>Typical Super Family values / Asset classes are:</p><p>Debt<br />Equity<br />FX<br />Commodity<br />Derivative</p><p>Product hiearchy vs Product Collections:</p><ul><li><p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p></li><li><p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p></li></ul><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutProductJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutProductJsonV500"}}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attribute", "method": "post", "description": "<p>Create Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Typical product attributes might be:</p><p>ISIN (for International bonds)<br />VKN (for German bonds)<br />REDCODE (markit short code for credit derivative)<br />LOAN_ID (e.g. used for Anacredit reporting)</p><p>ISSUE_DATE (When the bond was issued in the market)<br />MATURITY_DATE (End of life time of a product)<br />TRADABLE</p><p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ProductAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ProductAttributeJsonV400"}}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ProductAttributeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attributes/{PRODUCT_ATTRIBUTE_ID}", "method": "delete", "description": "<p>Delete Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Delete a Product Attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "PRODUCT_ATTRIBUTE_ID", "description": "the product attribute id", "required": true, "type": "string"}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserHasMissingRoles"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attributes/{PRODUCT_ATTRIBUTE_ID}", "method": "get", "description": "<p>Get Product Attribute</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Get one product attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "PRODUCT_ATTRIBUTE_ID", "description": "the product attribute id", "required": true, "type": "string"}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductAttributeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserHasMissingRoles"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/attributes/{PRODUCT_ATTRIBUTE_ID}", "method": "put", "description": "<p>Update Product Attribute.</p><p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p><p>Update one Product Attribute by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ProductAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ProductAttributeJsonV400"}}, {"in": "path", "name": "PRODUCT_ATTRIBUTE_ID", "description": "the product attribute id", "required": true, "type": "string"}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductAttributeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserHasMissingRoles"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fee", "method": "post", "description": "<p>Create Product Fee</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ProductFeeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ProductFeeJsonV400"}}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ProductFeeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fees", "method": "get", "description": "<p>Get Product Fees</p><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductFeesResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fees/PRODUCT_FEE_ID", "method": "delete", "description": "<p>Delete Product Fee</p><p>Delete one product fee by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fees/PRODUCT_FEE_ID", "method": "get", "description": "<p>Get Product Fee</p><p>Get one product fee by its id.</p><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductFeeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/products/{PRODUCT_CODE}/fees/PRODUCT_FEE_ID", "method": "put", "description": "<p>Update Product Fee.</p><p>Update one Product Fee by its id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ProductFeeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ProductFeeJsonV400"}}, {"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ProductFeeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/public/accounts/{ACCOUNT_ID}/{VIEW_ID}/account", "method": "get", "description": "<p>Returns information about an account that has a public view.</p><p>The account is specified by ACCOUNT_ID. The information is moderated by the view specified by VIEW_ID.</p><ul><li>Number</li><li>Owners</li><li>Type</li><li>Balance</li><li>Routing</li></ul><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />This call provides balance and other account information via delegated authentication using OAuth.</p><p>Authentication is Optional</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ModeratedCoreAccountJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/resource-docs/{API_VERSION}/obp", "method": "get", "description": "<p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "API_VERSION", "description": "eg:v2.2.0, v3.0.0", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceDocsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/search/customers/mobile-phone-number", "method": "post", "description": "<p>Gets the Customers specified by MOBILE_PHONE_NUMBER.</p><p>There are two wildcards often used in conjunction with the LIKE operator:<br />% - The percent sign represents zero, one, or multiple characters<br />_ - The underscore represents a single character<br />For example {&quot;customer_phone_number&quot;:&quot;%381%&quot;} lists all numbers which contain 381 sequence</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCustomerPhoneNumberJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCustomerPhoneNumberJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/settlement-accounts", "method": "get", "description": "<p>Get settlement accounts on this API instance<br />Returns a list of settlement accounts at this Bank</p><p>Note: a settlement account is considered as a bank account.<br />So you can update it and add account attributes to it using the regular account endpoints</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SettlementAccountsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/settlement-accounts", "method": "post", "description": "<p>Create a new settlement account at a bank.</p><p>The created settlement account id will be the concatenation of the payment system and the account currency.<br />For examples: SEPA_SETTLEMENT_ACCOUNT_EUR, CARD_SETTLEMENT_ACCOUNT_USD</p><p>By default, when you create a new bank, two settlements accounts are created automatically: OBP_DEFAULT_INCOMING_ACCOUNT_ID and OBP_DEFAULT_OUTGOING_ACCOUNT_ID<br />Those two accounts have EUR as default currency.</p><p>If you want to create default settlement account for a specific currency, you can fill the <code>payment_system</code> field with the <code>DEFAULT</code> value.</p><p>When a transaction is saved in OBP through the mapped connector, OBP-API look for the account to save the double-entry transaction.<br />If no OBP account can be found from the counterparty, the double-entry transaction will be saved on a bank settlement account.<br />- First, the mapped connector looks for a settlement account specific to the payment system and currency. E.g SEPA_SETTLEMENT_ACCOUNT_EUR.<br />- If we don't find any specific settlement account with the payment system, we look for a default settlement account for the counterparty currency. E.g DEFAULT_SETTLEMENT_ACCOUNT_EUR.<br />- Else, we select one of the two OBP default settlement accounts (OBP_DEFAULT_INCOMING_ACCOUNT_ID/OBP_DEFAULT_OUTGOING_ACCOUNT_ID) according to the transaction direction.</p><p>If the POST body USER_ID <em>is</em> specified, the logged in user must have the Role CanCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.</p><p>If the POST body USER_ID is <em>not</em> specified, the account will be owned by the logged in User.</p><p>Note: The Amount MUST be zero.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "SettlementAccountRequestJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/SettlementAccountRequestJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SettlementAccountResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/transaction-request-types", "method": "get", "description": "<p>Get the list of the Transaction Request Types supported by the bank.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestTypesJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/transaction-types", "method": "get", "description": "<p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).</p><ul><li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li><li>bank_id : The bank that supports this TransactionType</li><li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li><li>summary : A succinct summary</li><li>description : A longer description</li><li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionTypesJsonV200"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/transaction-types", "method": "put", "description": "<p>Create Transaction Types for the bank specified by BANK_ID:</p><ul><li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li><li>bank_id : The bank that supports this TransactionType</li><li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li><li>summary : A succinct summary</li><li>description : A longer description</li><li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionTypeJsonV200 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionTypeJsonV200"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionType"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user-invitation", "method": "post", "description": "<p>Create User Invitation.</p><p>This endpoint will send an invitation email to the developers, then they can use the link to create the obp user.</p><p>purpose filed only support:List(DEVELOPER, CUSTOMER).</p><p>You can customise the email details use the following webui props:</p><p>when purpose == DEVELOPER<br />webui_developer_user_invitation_email_subject<br />webui_developer_user_invitation_email_from<br />webui_developer_user_invitation_email_text<br />webui_developer_user_invitation_email_html_text</p><p>when purpose = == CUSTOMER<br />webui_customer_user_invitation_email_subject<br />webui_customer_user_invitation_email_from<br />webui_customer_user_invitation_email_text<br />webui_customer_user_invitation_email_html_text</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostUserInvitationJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostUserInvitationJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserInvitationJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user-invitations", "method": "get", "description": "<p>Get User Invitations</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserInvitationJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user-invitations", "method": "post", "description": "<p>Create User Invitation Information.</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "PostUserInvitationAnonymousJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostUserInvitationAnonymousJsonV400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserInvitationJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user-invitations/SECRET_LINK", "method": "get", "description": "<p>Get User Invitation</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserInvitationJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user_customer_links", "method": "post", "description": "<p>Link a User to a Customer</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateUserCustomerLinkJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateUserCustomerLinkJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserCustomerLinkJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user_customer_links/USER_CUSTOMER_LINK_ID", "method": "delete", "description": "<p>Delete User Customer Link by USER_CUSTOMER_LINK_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user_customer_links/customers/{CUSTOMER_ID}", "method": "get", "description": "<p>Get User Customer Links by CUSTOMER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserCustomerLinksJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/user_customer_links/users/{USER_ID}", "method": "get", "description": "<p>Get User Customer Links by USER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserCustomerLinksJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/users/{USER_ID}/entitlements", "method": "get", "description": "<p>Get Entitlements specified by BANK_ID and USER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementJSONs"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{AUTH_CONTEXT_UPDATE_ID}/challenge", "method": "post", "description": "<p>Answer User Auth Context Update Challenge.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostUserAuthContextUpdateJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostUserAuthContextUpdateJsonV310"}}, {"in": "path", "name": "AUTH_CONTEXT_UPDATE_ID", "description": "the auth context update id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserAuthContextUpdateJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/users/current/auth-context-updates/{SCA_METHOD}", "method": "post", "description": "<p>Create User Auth Context Update Request.<br />Authentication is Mandatory</p><p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />SCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot; is used for testing purposes.</p>", "parameters": [{"in": "body", "name": "body", "description": "PostUserAuthContextJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostUserAuthContextJson"}}, {"in": "path", "name": "SCA_METHOD", "description": "the sca method", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserAuthContextUpdateJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/banks/{BANK_ID}/web-hooks/account/notifications/on-create-transaction", "method": "post", "description": "<p>Create a notification Webhook that will fire for all accounts on the specified Bank.</p><p>Webhooks are used to call external web services when certain events happen.</p><p>For instance, a webhook can be used to notify an external service if a transaction is created on an account.</p><p>When an account notification webhook fires it will POST to the URL you specify during the creation of the webhook.</p><p>Inside the payload you will find account_id and transaction_id and also user_ids and customer_ids of the Users / Customers linked to the Account.</p><p>The webhook will POST the following structure to your service:</p><p>{<br />&quot;event_name&quot;: &quot;OnCreateTransaction&quot;,<br />&quot;event_id&quot;: &quot;9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;transaction_id&quot;: &quot;7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;related_entities&quot;: [<br />{<br />&quot;user_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;customer_ids&quot;: [&quot;3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;]<br />}<br />]<br />}</p><p>Thus, your service should accept the above POST body structure.</p><p>In this way, your web service can be informed about an event on an account and act accordingly.</p><p>Further information about the account, transaction or related entities can then be retrieved using the standard REST APIs.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountNotificationWebhookPostJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountNotificationWebhookPostJson"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/BankAccountNotificationWebhookJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/cards", "method": "get", "description": "<p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PhysicalCardsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/certs", "method": "get", "description": "<p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SeverJWK"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/config", "method": "get", "description": "<p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConfigurationJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/connector/loopback", "method": "get", "description": "<p>This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.</p><p>Currently this is only implemented for Kafka based connectors.</p><p>For Kafka based connectors, this endpoint writes a message to Kafka and reads it again.</p><p>In the future, this endpoint may also return information about database connections etc.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ObpApiLoopbackJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/consumer/consent-requests", "method": "post", "description": "<p>Client Authentication (mandatory)</p><p>It is used when applications request an access token to access their own resources, not on behalf of a user.</p><p>The client needs to authenticate themselves for this request.<br />In case of public client we use client_id and private kew to obtain access token, otherwise we use client_id and client_secret.<br />The obtained access token is used in the HTTP Bearer auth header of our request.</p><p>Example:<br />Authorization: Bearer eXtneO-THbQtn3zvK_kQtXXfvOZyZFdBCItlPDbR2Bk.dOWqtXCtFX-tqGTVR0YrIjvAolPIVg7GZ-jz83y6nA0</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "PostConsentRequestJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostConsentRequestJsonV500"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentRequestResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID", "method": "get", "description": "<p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentRequestResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/EMAIL/consents", "method": "post", "description": "<p>This endpoint continues the process of creating a Consent. It starts the SCA flow which changes the status of the consent from INITIATED to ACCEPTED or REJECTED.<br />Please note that the Consent cannot elevate the privileges logged in user already have.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/IMPLICIT/consents", "method": "post", "description": "<p>This endpoint continues the process of creating a Consent. It starts the SCA flow which changes the status of the consent from INITIATED to ACCEPTED or REJECTED.<br />Please note that the Consent cannot elevate the privileges logged in user already have.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/SMS/consents", "method": "post", "description": "<p>This endpoint continues the process of creating a Consent. It starts the SCA flow which changes the status of the consent from INITIATED to ACCEPTED or REJECTED.<br />Please note that the Consent cannot elevate the privileges logged in user already have.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/consents", "method": "get", "description": "<p>This endpoint gets the Consent By consent request id.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/consumer/consents/{CONSENT_ID}", "method": "get", "description": "<p>This endpoint gets the Consent By consent id.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CONSENT_ID", "description": "the consent id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/consumers/{CONSUMER_ID}/scope/{SCOPE_ID}", "method": "delete", "description": "<p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "SCOPE_ID", "description": "the scope id", "required": true, "type": "string"}, {"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/consumers/{CONSUMER_ID}/scopes", "method": "get", "description": "<p>Get all the scopes for an consumer specified by CONSUMER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ScopeJsons"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/consumers/{CONSUMER_ID}/scopes", "method": "post", "description": "<p>Create Scope. Grant Role to Consumer.</p><p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateScopeJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateScopeJson"}}, {"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ScopeJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/customers", "method": "get", "description": "<p>Get Customers at Any Bank.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJSONsV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/customers-minimal", "method": "get", "description": "<p>Get Customers Minimal at Any Bank.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomersMinimalJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/customers/{CUSTOMER_ID}/accounts-minimal", "method": "get", "description": "<p>Get Accounts Minimal by CUSTOMER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountsMinimalJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_checks", "method": "get", "description": "<p>Get KYC checks for the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycChecksJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_documents", "method": "get", "description": "<p>Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID<br />Get a list of documents that affirm the identity of the customer<br />Passport, driving licence etc.<br />Authentication is Optional</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycDocumentsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_media", "method": "get", "description": "<p>Get KYC media (scans, pictures, videos) that affirms the identity of the customer.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycMediasJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/customers/{CUSTOMER_ID}/kyc_statuses", "method": "get", "description": "<p>Get the KYC statuses for a customer specified by CUSTOMER_ID over time.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/KycStatusesJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/database/info", "method": "get", "description": "<p>Get basic information about the Mapper Database.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AdapterInfoJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/development/call_context", "method": "get", "description": "<p>Get the Call Context of the current call.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/development/echo/jws-verified-request-jws-signed-response", "method": "get", "description": "<p>Verify Request and Sign Response of a current call.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/dynamic-registration/consumers", "method": "post", "description": "<p>Create a Consumer (mTLS access).</p><p>JWT payload:<br />- minimal<br />{ &quot;description&quot;:&quot;Description&quot; }<br />- full<br />{<br />&quot;description&quot;: &quot;Description&quot;,<br />&quot;app_name&quot;: &quot;Tesobe GmbH&quot;,<br />&quot;app_type&quot;: &quot;Sofit&quot;,<br />&quot;developer_email&quot;: &quot;<a href=\"&#x6d;&#x61;&#x69;&#x6c;t&#x6f;&#x3a;&#109;&#x61;r&#107;o&#x40;te&#115;&#x6f;&#98;&#101;.c&#111;&#x6d;\">&#109;&#97;r&#x6b;&#111;&#x40;&#116;&#101;&#115;&#111;&#x62;&#101;&#x2e;co&#x6d;</a>&quot;,<br />&quot;redirect_url&quot;: &quot;<a href=\"http://localhost:8082\">http://localhost:8082</a>&quot;<br />}<br />Please note that JWT must be signed with the counterpart private kew of the public key used to establish mTLS</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "ConsumerJwtPostJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ConsumerJwtPostJsonV510"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsumerJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/endpoints/authentication-type-validations", "method": "get", "description": "<p>Get all Authentication Type Validations - public.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["authentication_types_validations"], "properties": {"authentication_types_validations": {"type": "array", "items": {"$ref": "#/definitions/JsonAuthTypeValidation"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/endpoints/json-schema-validations", "method": "get", "description": "<p>Get all JSON Schema Validations - public.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["json_schema_validations"], "properties": {"json_schema_validations": {"type": "array", "items": {"$ref": "#/definitions/JsonValidationV400"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/entitlement-requests", "method": "get", "description": "<p>Get all Entitlement Requests</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementRequestsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/entitlement-requests", "method": "post", "description": "<p>Create Entitlement Request.</p><p>Any logged in User can use this endpoint to request an Entitlement</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateEntitlementJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateEntitlementJSON"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementRequestJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/entitlement-requests/{ENTITLEMENT_REQUEST_ID}", "method": "delete", "description": "<p>Delete the Entitlement Request specified by ENTITLEMENT_REQUEST_ID for a user specified by USER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ENTITLEMENT_REQUEST_ID", "description": "the entitlement request id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/entitlements", "method": "get", "description": "<p>Login is required.</p><p>Possible filter on the role field:</p><p>eg: /entitlements?role=CanGetCustomer</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementJSONs"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/jwks-uris", "method": "get", "description": "<p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OAuth2ServerJwksUrisJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/management/accounts/account-routing-query", "method": "post", "description": "<p>This endpoint returns the account (if it exists) linked with the provided scheme and address.</p><p>The <code>bank_id</code> field is optional, but if it's not provided, we don't guarantee that the returned account is unique across all the banks.</p><p>Example of account routing scheme: <code>IBAN</code>, &quot;OBP&quot;, &quot;AccountNumber&quot;, ...<br />Example of account routing address: <code>DE17500105178275645584</code>, &quot;321774cc-fccd-11ea-adc1-0242ac120002&quot;, &quot;55897106215&quot;, ...</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "BankAccountRoutingJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/BankAccountRoutingJson"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ModeratedAccountJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/accounts/account-routing-regex-query", "method": "post", "description": "<p>This endpoint returns an array of accounts matching the provided routing scheme and the routing address regex.</p><p>The <code>bank_id</code> field is optional.</p><p>Example of account routing scheme: <code>IBAN</code>, <code>OBP</code>, <code>AccountNumber</code>, ...<br />Example of account routing address regex: <code>DE175.*</code>, <code>55897106215-[A-Z]{3}</code>, ...</p><p>This endpoint can be used to retrieve multiples accounts matching a same account routing address pattern.<br />For example, if you want to link multiple accounts having different currencies, you can create an account<br />with <code>123456789-EUR</code> as Account Number and an other account with <code>123456789-USD</code> as Account Number.<br />So we can identify the Account Number as <code>123456789</code>, so to get all the accounts with the same account number<br />and the different currencies, we can use this body in the request :</p><pre><code>{   &quot;bank_id&quot;: &quot;BANK_ID&quot;,   &quot;account_routing&quot;: {       &quot;scheme&quot;: &quot;AccountNumber&quot;,       &quot;address&quot;: &quot;123456789-[A-Z]{3}&quot;   }}</code></pre><p>This request will returns the accounts matching the routing address regex (<code>123456789-EUR</code> and <code>123456789-USD</code>).</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "BankAccountRoutingJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/BankAccountRoutingJson"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ModeratedAccountsJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/aggregate-metrics", "method": "get", "description": "<p>Returns aggregate metrics on api usage eg. total count, response time (in ms), etc.</p><p>Should be able to filter on the following fields</p><p>eg: /management/aggregate-metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1 from_date (defaults to the day before the current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to the current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 include_app_names (if null ignore).eg: &amp;include_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>13 include_url_patterns (if null ignore).you can design you own SQL LIKE pattern. eg: &amp;include_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>14 include_implemented_by_partial_functions (if null ignore).eg: &amp;include_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AggregateMetricJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/api-collections", "method": "get", "description": "<p>Get All API Collections.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionsJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserHasMissingRoles"}}}}, {"path": "/obp/v5.1.0/management/authentication-type-validations", "method": "get", "description": "<p>Get all Authentication Type Validations.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["authentication_types_validations"], "properties": {"authentication_types_validations": {"type": "array", "items": {"$ref": "#/definitions/JsonAuthTypeValidation"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID", "method": "delete", "description": "<p>Delete an Authentication Type Validation by operation_id.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID", "method": "get", "description": "<p>Get an Authentication Type Validation by operation_id.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonAuthTypeValidation"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID", "method": "post", "description": "<p>Create an Authentication Type Validation.</p><p>Please supply allowed authentication types.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "$colon$colon object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/NotSupportedYet"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonAuthTypeValidation"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID", "method": "put", "description": "<p>Update an Authentication Type Validation.</p><p>Please supply allowed authentication types.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "$colon$colon object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/NotSupportedYet"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonAuthTypeValidation"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/account-web-hooks", "method": "get", "description": "<p>Get Account Webhooks.</p><p>Possible custom URL parameters for pagination:</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>account_id=STRING (if null ignore)</li><li>user_id=STRING (if null ignore)</li></ul><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountWebhooksJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}", "method": "put", "description": "<p>Update the account.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UpdateAccountRequestJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UpdateAccountRequestJsonV310"}}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateAccountResponseJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties", "method": "get", "description": "<p>Get the Counterparties (Explicit) for any account .</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CounterpartiesJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties", "method": "post", "description": "<p>Create Counterparty for any Account. (Explicit)</p><p>In OBP, there are two types of Counterparty.</p><ul><li><p>Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests</p></li><li><p>Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.</p></li></ul><p>Explicit Counterparties are created for the account / view<br />They are how the user of the view (e.g. account owner) refers to the other side of the transaction</p><p>name : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>description : the human readable name (e.g. Piano teacher, Miss Nipa)</p><p>currency : counterparty account currency (e.g. EUR, GBP, USD, ...)</p><p>bank_routing_scheme : eg: bankId or bankCode or any other strings</p><p>bank_routing_address : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p><p>account_routing_scheme : eg: AccountId or AccountNumber or any other strings</p><p>account_routing_address : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p><p>other_account_secondary_routing_scheme : eg: IBAN or any other strings</p><p>other_account_secondary_routing_address : if it is an IBAN, it should be unique for each counterparty.</p><p>other_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.</p><p>other_branch_routing_address : eg: <code>branch-id-123</code> or you can leave it empty, not useful in sandbox mode.</p><p>is_beneficiary : must be set to <code>true</code> in order to send payments to this counterparty</p><p>bespoke: It supports a list of key-value, you can add it to the counterparty.</p><p>bespoke.key : any info-key you want to add to this counterparty</p><p>bespoke.value : any info-value you want to add to this counterparty</p><p>The view specified by VIEW_ID must have the canAddCounterparty permission</p><p>A minimal example for TransactionRequestType == COUNTERPARTY<br />{<br />&quot;name&quot;: &quot;Tesobe1&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;currency&quot;: &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_account_secondary_routing_address&quot;: &quot;&quot;,<br />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>A minimal example for TransactionRequestType == SEPA</p><p>{<br />&quot;name&quot;: &quot;Tesobe2&quot;,<br />&quot;description&quot;: &quot;Good Company&quot;,<br />&quot;currency&quot;: &quot;EUR&quot;,<br />&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />&quot;other_account_secondary_routing_scheme&quot;: &quot;IBAN&quot;,<br />&quot;other_account_secondary_routing_address&quot;: &quot;DE89 3704 0044 0532 0130 00&quot;,<br />&quot;is_beneficiary&quot;: true,<br />&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />&quot;bespoke&quot;: []<br />}</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCounterpartyJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCounterpartyJson400"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CounterpartyWithMetadataJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/{COUNTERPARTY_ID}", "method": "delete", "description": "<p>Delete Counterparty (Explicit) for any account<br />and also delete the Metadata for its counterparty.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "COUNTERPARTY_ID", "description": "the counterparty id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparties/{COUNTERPARTY_ID}", "method": "get", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "COUNTERPARTY_ID", "description": "the counterparty id", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CounterpartyWithMetadataJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/counterparty-names/{COUNTERPARTY_NAME}", "method": "get", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "COUNTERPARTY_NAME", "description": "the counterparty name", "required": true, "type": "string"}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CounterpartyWithMetadataJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/direct-debit", "method": "post", "description": "<p>Create direct debit for an account.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostDirectDebitJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostDirectDebitJsonV400"}}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/DirectDebitJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/standing-order", "method": "post", "description": "<p>Create standing order for an account.</p><p>when -&gt; frequency = {\u2018YEARLY\u2019,\u2019MONTHLY, \u2018WEEKLY\u2019, \u2018BI-WEEKLY\u2019, DAILY\u2019}<br />when -&gt; detail = { \u2018FIRST_MONDAY\u2019, \u2018FIRST_DAY\u2019, \u2018LAST_DAY\u2019}}</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostStandingOrderJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostStandingOrderJsonV400"}}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/StandingOrderJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/cards", "method": "get", "description": "<p>Should be able to filter on the following fields</p><p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p><p>1 customer_id should be valid customer_id, otherwise, it will return an empty card list.</p><p>2 account_id should be valid account_id , otherwise, it will return an empty card list.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PhysicalCardsJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/cards", "method": "post", "description": "<p>Create Card at bank specified by BANK_ID .</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreatePhysicalCardJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreatePhysicalCardJsonV500"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/PhysicalCardJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}", "method": "delete", "description": "<p>Delete a Card at bank specified by CARD_ID .</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CARD_ID", "description": "the card id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}", "method": "get", "description": "<p>This will the datails of the card.<br />It shows the account infomation which linked the the card.<br />Also shows the card attributes of the card.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CARD_ID", "description": "the card id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PhysicalCardWithAttributesJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}", "method": "put", "description": "<p>Update Card at bank specified by CARD_ID .<br />Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UpdatePhysicalCardJsonV310 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UpdatePhysicalCardJsonV310"}}, {"in": "path", "name": "CARD_ID", "description": "the card id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PhysicalCardJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attribute", "method": "post", "description": "<p>Create Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CardAttributeJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CardAttributeJson"}}, {"in": "path", "name": "CARD_ID", "description": "the card id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/CardAttributeCommons"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/cards/{CARD_ID}/attributes/{CARD_ATTRIBUTE_ID}", "method": "put", "description": "<p>Update Card Attribute</p><p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p><p>Each Card Attribute is linked to its Card by CARD_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CardAttributeJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CardAttributeJson"}}, {"in": "path", "name": "CARD_ATTRIBUTE_ID", "description": "the card attribute id", "required": true, "type": "string"}, {"in": "path", "name": "CARD_ID", "description": "the card id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CardAttributeCommons"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints", "method": "get", "description": "<p>Get Bank Level Dynamic Endpoints.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic_endpoints"], "properties": {"dynamic_endpoints": {"type": "array", "items": {"type": "object", "properties": {"user_id": {"type": "string", "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"}, "dynamic_endpoint_id": {"type": "string", "example": "dynamic-endpoint-id"}, "swagger_string": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, "required": ["user_id", "dynamic_endpoint_id", "swagger_string"]}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints", "method": "post", "description": "<p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"user_id": {"type": "string", "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"}, "dynamic_endpoint_id": {"type": "string", "example": "dynamic-endpoint-id"}, "swagger_string": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, "required": ["user_id", "dynamic_endpoint_id", "swagger_string"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID", "method": "delete", "description": "<p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID", "method": "get", "description": "<p>Get a Bank Level Dynamic Endpoint.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"user_id": {"type": "string", "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"}, "dynamic_endpoint_id": {"type": "string", "example": "dynamic-endpoint-id"}, "swagger_string": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, "required": ["user_id", "dynamic_endpoint_id", "swagger_string"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host", "method": "put", "description": "<p>Update Bank Level  dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "DynamicEndpointHostJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/DynamicEndpointHostJson400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DynamicEndpointHostJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-entities", "method": "get", "description": "<p>Get all the bank level Dynamic Entities for one bank.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic_entities"], "properties": {"dynamic_entities": {"type": "array", "items": {"$ref": "#/definitions/DynamicEntityFooBar"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-entities", "method": "post", "description": "<p>Create a Bank Level DynamicEntity.</p><p>Authentication is Mandatory</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField20&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField21&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField22&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField23&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField24&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField25&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField26&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;38e368c1-9cfe-4e7a-b3c9-7c51592007e5&quot;}&quot;someField27&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=38e368c1-9cfe-4e7a-b3c9-7c51592007e5&amp;branchId=60499dda-04aa-4f2b-a4e2-1b12decc6758&quot;}&quot;someField28&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=38e368c1-9cfe-4e7a-b3c9-7c51592007e5&amp;atmId=60499dda-04aa-4f2b-a4e2-1b12decc6758&quot;}&quot;someField29&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=38e368c1-9cfe-4e7a-b3c9-7c51592007e5&amp;accountId=60499dda-04aa-4f2b-a4e2-1b12decc6758&quot;}&quot;someField30&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=38e368c1-9cfe-4e7a-b3c9-7c51592007e5&amp;productCode=60499dda-04aa-4f2b-a4e2-1b12decc6758&quot;}&quot;someField31&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=38e368c1-9cfe-4e7a-b3c9-7c51592007e5&amp;cardId=60499dda-04aa-4f2b-a4e2-1b12decc6758&quot;}&quot;someField32&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=38e368c1-9cfe-4e7a-b3c9-7c51592007e5&amp;accountId=60499dda-04aa-4f2b-a4e2-1b12decc6758&amp;transactionId=b99db61c-00e4-4f40-8e2b-41434dfe4e6f&quot;}&quot;someField33&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=38e368c1-9cfe-4e7a-b3c9-7c51592007e5&amp;accountId=60499dda-04aa-4f2b-a4e2-1b12decc6758&amp;counterpartyId=b99db61c-00e4-4f40-8e2b-41434dfe4e6f&quot;}</code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>", "parameters": [{"in": "body", "name": "body", "description": "DynamicEntityFooBar object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}", "method": "delete", "description": "<p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "DYNAMIC_ENTITY_ID", "description": "the dynamic entity id ", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}", "method": "put", "description": "<p>Update a Bank Level DynamicEntity.</p><p>Authentication is Mandatory</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField20&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField21&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField22&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField23&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField24&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField25&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField26&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&quot;}&quot;someField27&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&amp;branchId=64d27ea9-5d19-438d-813b-173f9dbc16d5&quot;}&quot;someField28&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&amp;atmId=64d27ea9-5d19-438d-813b-173f9dbc16d5&quot;}&quot;someField29&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&amp;accountId=64d27ea9-5d19-438d-813b-173f9dbc16d5&quot;}&quot;someField30&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&amp;productCode=64d27ea9-5d19-438d-813b-173f9dbc16d5&quot;}&quot;someField31&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&amp;cardId=64d27ea9-5d19-438d-813b-173f9dbc16d5&quot;}&quot;someField32&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&amp;accountId=64d27ea9-5d19-438d-813b-173f9dbc16d5&amp;transactionId=219c7c9e-9054-4dbc-8fb0-412bc4eeabd8&quot;}&quot;someField33&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=a4d6e68d-5c94-4b64-a5fd-1f267eb25a7f&amp;accountId=64d27ea9-5d19-438d-813b-173f9dbc16d5&amp;counterpartyId=219c7c9e-9054-4dbc-8fb0-412bc4eeabd8&quot;}</code></pre>", "parameters": [{"in": "body", "name": "body", "description": "DynamicEntityFooBar object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, {"in": "path", "name": "DYNAMIC_ENTITY_ID", "description": "the dynamic entity id ", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-message-docs", "method": "get", "description": "<p>Get all Bank Level Dynamic Message Docs.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic-message-docs"], "properties": {"dynamic-message-docs": {"type": "array", "items": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-message-docs", "method": "post", "description": "<p>Create a Bank Level Dynamic Message Doc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicMessageDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID", "method": "delete", "description": "<p>Delete a Bank Level Dynamic Message Doc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID", "method": "get", "description": "<p>Get a Bank Level Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID", "method": "put", "description": "<p>Update a Bank Level Dynamic Message Doc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicMessageDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-resource-docs", "method": "get", "description": "<p>Get all Bank Level Dynamic Resource Docs.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic-resource-docs"], "properties": {"dynamic-resource-docs": {"type": "array", "items": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-resource-docs", "method": "post", "description": "<p>Create a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicResourceDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID", "method": "delete", "description": "<p>Delete a Bank Level Dynamic Resource Doc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID", "method": "get", "description": "<p>Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID", "method": "put", "description": "<p>Update a Bank Level Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicResourceDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoint-mappings", "method": "get", "description": "<p>Get all Bank Level Endpoint Mappings.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["endpoint-mappings"], "properties": {"endpoint-mappings": {"type": "array", "items": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}, "endpoint_mapping_id": {"type": "string", "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"}}, "required": ["operation_id", "request_mapping", "response_mapping", "endpoint_mapping_id"]}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoint-mappings", "method": "post", "description": "<p>Create an Bank Level Endpoint Mapping.</p><p>Note: at moment only support the dynamic endpoints</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}}, "required": ["operation_id", "request_mapping", "response_mapping"]}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}}, "required": ["operation_id", "request_mapping", "response_mapping"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoint-mappings/ENDPOINT_MAPPING_ID", "method": "delete", "description": "<p>Delete a Bank Level Endpoint Mapping.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoint-mappings/ENDPOINT_MAPPING_ID", "method": "get", "description": "<p>Get an Bank Level Endpoint Mapping by ENDPOINT_MAPPING_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}, "endpoint_mapping_id": {"type": "string", "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"}}, "required": ["operation_id", "request_mapping", "response_mapping", "endpoint_mapping_id"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoint-mappings/ENDPOINT_MAPPING_ID", "method": "put", "description": "<p>Update an Bank Level Endpoint Mapping.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}}, "required": ["operation_id", "request_mapping", "response_mapping"]}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}, "endpoint_mapping_id": {"type": "string", "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"}}, "required": ["operation_id", "request_mapping", "response_mapping", "endpoint_mapping_id"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags", "method": "get", "description": "<p>Get Bank Level Endpoint Tags.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/NotSupportedYet"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags", "method": "post", "description": "<p>Create Bank Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EndpointTagJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EndpointTagJson400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/BankLevelEndpointTagResponseJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID", "method": "delete", "description": "<p>Delete Bank Level Endpoint Tag.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/Full"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID", "method": "put", "description": "<p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EndpointTagJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EndpointTagJson400"}}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankLevelEndpointTagResponseJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/banks/{BANK_ID}/fast-firehose/accounts", "method": "get", "description": "<p>This endpoint allows bulk access to accounts.</p><p>optional pagination parameters for filter with accounts</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/FastFirehoseAccountsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorBankNotFound"}}}}, {"path": "/obp/v5.1.0/management/cascading/banks/{BANK_ID}", "method": "delete", "description": "<p>Delete a Bank Cascade specified by BANK_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/cascading/banks/{BANK_ID}/accounts/{ACCOUNT_ID}", "method": "delete", "description": "<p>Delete an Account Cascade specified by ACCOUNT_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/cascading/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions/{TRANSACTION_ID}", "method": "delete", "description": "<p>Delete a Transaction Cascade specified by TRANSACTION_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}, {"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/cascading/banks/{BANK_ID}/customers/{CUSTOMER_ID}", "method": "delete", "description": "<p>Delete a Customer Cascade specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CUSTOMER_ID", "description": "The customer id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/cascading/banks/{BANK_ID}/products/{PRODUCT_CODE}", "method": "delete", "description": "<p>Delete a Product Cascade specified by PRODUCT_CODE.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "PRODUCT_CODE", "description": "the product code", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/connector-methods", "method": "get", "description": "<p>Get all Connector Methods.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["connectors_methods"], "properties": {"connectors_methods": {"type": "array", "items": {"$ref": "#/definitions/JsonConnectorMethod"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/connector-methods", "method": "post", "description": "<p>Create an internal connector.</p><p>The method_body is URL-encoded format String</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonConnectorMethod object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonConnectorMethod"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonConnectorMethod"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/connector-methods/CONNECTOR_METHOD_ID", "method": "get", "description": "<p>Get an internal connector by CONNECTOR_METHOD_ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonConnectorMethod"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/connector-methods/CONNECTOR_METHOD_ID", "method": "put", "description": "<p>Update an internal connector.</p><p>The method_body is URL-encoded format String</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonConnectorMethodMethodBody object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonConnectorMethodMethodBody"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonConnectorMethod"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/connector/metrics", "method": "get", "description": "<p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConnectorMetricsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidDateFormat"}}}}, {"path": "/obp/v5.1.0/management/consumers", "method": "get", "description": "<p>Get the all Consumers.</p><p>Authentication is Mandatory</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2024-05-15T12:58:25.415Z. NOTE! The default value is now (2024-05-15T12:58:25.415Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsumersJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/consumers", "method": "post", "description": "<p>Create a Consumer (Authenticated access).</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ConsumerPostJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ConsumerPostJSON"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ConsumerJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/consumers/{CONSUMER_ID}", "method": "get", "description": "<p>Get the Consumer specified by CONSUMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsumerJsonV210"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/consumers/{CONSUMER_ID}", "method": "put", "description": "<p>Enable/Disable a Consumer specified by CONSUMER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PutEnabledJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PutEnabledJSON"}}, {"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/PutEnabledJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits", "method": "get", "description": "<p>Get Calls limits per Consumer.<br />Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CallLimitJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/consumers/{CONSUMER_ID}/consumer/call-limits", "method": "put", "description": "<p>Set the API rate limits / call limits for a Consumer:</p><p>Rate limiting can be set:</p><p>Per Second<br />Per Minute<br />Per Hour<br />Per Week<br />Per Month</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CallLimitPostJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CallLimitPostJsonV400"}}, {"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CallLimitPostJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/consumers/{CONSUMER_ID}/consumer/redirect_url", "method": "put", "description": "<p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p><p>Please note: Your consumer may be disabled as a result of this action.</p><p>CONSUMER_ID can be obtained after you register the application.</p><p>Or use the endpoint 'Get Consumers' to get it</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ConsumerRedirectUrlJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ConsumerRedirectUrlJSON"}}, {"in": "path", "name": "CONSUMER_ID", "description": "new consumer id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsumerJsonV210"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-endpoints", "method": "get", "description": "<p>Get Dynamic Endpoints.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic_endpoints"], "properties": {"dynamic_endpoints": {"type": "array", "items": {"type": "object", "properties": {"user_id": {"type": "string", "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"}, "dynamic_endpoint_id": {"type": "string", "example": "dynamic-endpoint-id"}, "swagger_string": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, "required": ["user_id", "dynamic_endpoint_id", "swagger_string"]}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-endpoints", "method": "post", "description": "<p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"user_id": {"type": "string", "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"}, "dynamic_endpoint_id": {"type": "string", "example": "dynamic-endpoint-id"}, "swagger_string": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, "required": ["user_id", "dynamic_endpoint_id", "swagger_string"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID", "method": "delete", "description": "<p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID", "method": "get", "description": "<p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"user_id": {"type": "string", "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"}, "dynamic_endpoint_id": {"type": "string", "example": "dynamic-endpoint-id"}, "swagger_string": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, "required": ["user_id", "dynamic_endpoint_id", "swagger_string"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host", "method": "put", "description": "<p>Update dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "DynamicEndpointHostJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/DynamicEndpointHostJson400"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DynamicEndpointHostJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-message-docs", "method": "get", "description": "<p>Get all Dynamic Message Docs.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic-message-docs"], "properties": {"dynamic-message-docs": {"type": "array", "items": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-message-docs", "method": "post", "description": "<p>Create a Dynamic Message Doc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicMessageDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID", "method": "delete", "description": "<p>Delete a Dynamic Message Doc.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID", "method": "get", "description": "<p>Get a Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID", "method": "put", "description": "<p>Update a Dynamic Message Doc.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicMessageDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicMessageDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-resource-docs", "method": "get", "description": "<p>Get all Dynamic Resource Docs.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic-resource-docs"], "properties": {"dynamic-resource-docs": {"type": "array", "items": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-resource-docs", "method": "post", "description": "<p>Create a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicResourceDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID", "method": "delete", "description": "<p>Delete a Dynamic Resource Doc.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID", "method": "get", "description": "<p>Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID", "method": "put", "description": "<p>Update a Dynamic Resource Doc.</p><p>The connector_method_body is URL-encoded format String</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonDynamicResourceDoc object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonDynamicResourceDoc"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/dynamic-resource-docs/endpoint-code", "method": "post", "description": "<p>Create a Dynamic Resource Doc endpoint code.</p><p>copy the response and past to PractiseEndpoint, So you can have the benefits of<br />auto compilation and debug</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "ResourceDocFragment object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ResourceDocFragment"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonCodeTemplateJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoint-mappings", "method": "get", "description": "<p>Get all Endpoint Mappings.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["endpoint-mappings"], "properties": {"endpoint-mappings": {"type": "array", "items": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}, "endpoint_mapping_id": {"type": "string", "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"}}, "required": ["operation_id", "request_mapping", "response_mapping", "endpoint_mapping_id"]}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoint-mappings", "method": "post", "description": "<p>Create an Endpoint Mapping.</p><p>Note: at moment only support the dynamic endpoints</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}}, "required": ["operation_id", "request_mapping", "response_mapping"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}}, "required": ["operation_id", "request_mapping", "response_mapping"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID", "method": "delete", "description": "<p>Delete a Endpoint Mapping.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID", "method": "get", "description": "<p>Get an Endpoint Mapping by ENDPOINT_MAPPING_ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}, "endpoint_mapping_id": {"type": "string", "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"}}, "required": ["operation_id", "request_mapping", "response_mapping", "endpoint_mapping_id"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID", "method": "put", "description": "<p>Update an Endpoint Mapping.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}}, "required": ["operation_id", "request_mapping", "response_mapping"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"operation_id": {"type": "string", "example": "OBPv4.0.0-dynamicEndpoint_POST_account"}, "request_mapping": {"type": "object", "properties": {}}, "response_mapping": {"type": "object", "properties": {"name": {"type": "object", "properties": {"entity": {"type": "string", "example": "FooBar"}, "field": {"type": "string", "example": "name"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}, "balance": {"type": "object", "properties": {"entity": {"type": "string", "example": "FashionBrand"}, "field": {"type": "string", "example": "number"}, "query": {"type": "string", "example": "number"}}, "required": ["entity", "field", "query"]}}, "required": ["name", "balance"]}, "endpoint_mapping_id": {"type": "string", "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"}}, "required": ["operation_id", "request_mapping", "response_mapping", "endpoint_mapping_id"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags", "method": "get", "description": "<p>Get System Level Endpoint Tags.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/NotSupportedYet"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags", "method": "post", "description": "<p>Create System Level Endpoint Tag</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EndpointTagJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EndpointTagJson400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/BankLevelEndpointTagResponseJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID", "method": "delete", "description": "<p>Delete System Level Endpoint Tag.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/Full"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID", "method": "put", "description": "<p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EndpointTagJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EndpointTagJson400"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BankLevelEndpointTagResponseJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/historical/transactions ", "method": "post", "description": "<p>Import the historical transactions.</p><p>The fields bank_id, account_id, counterparty_id in the json body are all optional ones.<br />It support transfer money from account to account, account to counterparty and counterparty to counterparty<br />Both bank_id + account_id and counterparty_id can identify the account, so OBP only need one of them to make the payment.<br />So:<br />When you need the account to account, just omit counterparty_id field.eg:<br />{<br />&quot;from&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />},<br />&quot;to&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>When you need the counterparty to counterparty, need to omit bank_id and account_id field.eg:<br />{<br />&quot;from&quot;: {<br />&quot;counterparty_id&quot;: &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />},<br />&quot;to&quot;: {<br />&quot;counterparty_id&quot;: &quot;26392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>or, you can counterparty to account<br />{<br />&quot;from&quot;: {<br />&quot;counterparty_id&quot;: &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />},<br />&quot;to&quot;: {<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />},<br />&quot;value&quot;: {<br />&quot;currency&quot;: &quot;GBP&quot;,<br />&quot;amount&quot;: &quot;10&quot;<br />},<br />&quot;description&quot;: &quot;this is for work&quot;,<br />&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />&quot;charge_policy&quot;: &quot;SHARED&quot;<br />}</p><p>This call is experimental.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostHistoricalTransactionJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostHistoricalTransactionJson"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/PostHistoricalTransactionResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/management/json-schema-validations", "method": "get", "description": "<p>Get all JSON Schema Validations.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["json_schema_validations"], "properties": {"json_schema_validations": {"type": "array", "items": {"$ref": "#/definitions/JsonValidationV400"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID", "method": "delete", "description": "<p>Delete a JSON Schema Validation by operation_id.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"type": "boolean"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID", "method": "get", "description": "<p>Get a JSON Schema Validation by operation_id.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonValidationV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID", "method": "post", "description": "<p>Create a JSON Schema Validation.</p><p>Introduction:</p>  <p>JSON Schema is &quot;a vocabulary that allows you to annotate and validate JSON documents&quot;.</p><p>By applying JSON Schema Validation to your OBP endpoints you can constrain POST and PUT request bodies. For example, you can set minimum / maximum lengths of fields and constrain values to certain lists or regular expressions.</p><p>See <a href=\"https://json-schema.org/\">JSONSchema.org</a> for more information about the JSON Schema standard.</p><p>To create a JSON Schema from an any JSON Request body you can use <a href=\"https://jsonschema.net/app/schemas/0\">JSON Schema Net</a></p><p>(The video link below shows how to use that)</p><p>Note: OBP Dynamic Entities also use JSON Schema Validation so you don't need to additionally wrap the resulting endpoints with extra JSON Schema Validation but you could do.</p><p>You can apply JSON schema validations to any OBP endpoint's request body using the POST and PUT endpoints listed in the link below.</p><p>PLEASE SEE the following video explanation: <a href=\"https://vimeo.com/485287014\">JSON schema validation of request for Static and Dynamic Endpoints and Entities</a></p><p>To use this endpoint, please supply a valid json-schema in the request body.</p><p>Note: It might take a few minutes for the newly created JSON Schema to take effect!</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonSchemaV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonSchemaV400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/JsonValidationV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID", "method": "put", "description": "<p>Update a JSON Schema Validation.</p><p>Introduction:</p>  <p>JSON Schema is &quot;a vocabulary that allows you to annotate and validate JSON documents&quot;.</p><p>By applying JSON Schema Validation to your OBP endpoints you can constrain POST and PUT request bodies. For example, you can set minimum / maximum lengths of fields and constrain values to certain lists or regular expressions.</p><p>See <a href=\"https://json-schema.org/\">JSONSchema.org</a> for more information about the JSON Schema standard.</p><p>To create a JSON Schema from an any JSON Request body you can use <a href=\"https://jsonschema.net/app/schemas/0\">JSON Schema Net</a></p><p>(The video link below shows how to use that)</p><p>Note: OBP Dynamic Entities also use JSON Schema Validation so you don't need to additionally wrap the resulting endpoints with extra JSON Schema Validation but you could do.</p><p>You can apply JSON schema validations to any OBP endpoint's request body using the POST and PUT endpoints listed in the link below.</p><p>PLEASE SEE the following video explanation: <a href=\"https://vimeo.com/485287014\">JSON schema validation of request for Static and Dynamic Endpoints and Entities</a></p><p>To use this endpoint, please supply a valid json-schema in the request body.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JsonSchemaV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/JsonSchemaV400"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/JsonValidationV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/method_routings", "method": "get", "description": "<p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://test.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://test.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["method_routings"], "properties": {"method_routings": {"type": "array", "items": {"$ref": "#/definitions/MethodRoutingCommons"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/method_routings", "method": "post", "description": "<p>Create a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>", "parameters": [{"in": "body", "name": "body", "description": "MethodRoutingCommons object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/MethodRoutingCommons"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/MethodRoutingCommons"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/method_routings/{METHOD_ROUTING_ID}", "method": "delete", "description": "<p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "METHOD_ROUTING_ID", "description": "the method routing id ", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/method_routings/{METHOD_ROUTING_ID}", "method": "put", "description": "<p>Update a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>", "parameters": [{"in": "body", "name": "body", "description": "MethodRoutingCommons object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/MethodRoutingCommons"}}, {"in": "path", "name": "METHOD_ROUTING_ID", "description": "the method routing id ", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MethodRoutingCommons"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/metrics", "method": "get", "description": "<p>Get API metrics rows. These are records of each REST API call.</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>You can filter by the following fields by applying url parameters</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date e.g.:from_date=1100-01-01T01:01:01.000Z Defaults to the Unix Epoch i.e. Thu Jan 01 00:00:00 UTC 1970</p><p>2 to_date e.g.:to_date=1100-01-01T01:01:01.000Z Defaults to a far future date i.e. Sat Jan 01 00:00:00 UTC 4000</p><p>Note: it is recommended you send a valid from_date (e.g. 5 seconds ago) and to_date (now + 1 second) if you want to get the latest records<br />Otherwise you may receive stale cached results.</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"m&#x61;&#105;&#x6c;&#116;o:&#48;&#x31;.&#48;&#48;0&#x5a;&amp;&#x6c;im&#105;t&#x3d;&#x31;&#48;&#48;&#48;0&#38;&#x6f;&#x66;&#102;&#115;e&#x74;&#61;0&#x26;&#x61;&#110;o&#x6e;&#x3d;&#x66;&#97;&#x6c;&#x73;&#101;&#38;a&#x70;&#x70;_&#110;&#x61;&#109;e&#x3d;&#x54;&#x65;&#x61;&#116;&#65;&#x70;&#112;&#38;i&#x6d;&#x70;&#x6c;e&#x6d;&#x65;&#x6e;te&#x64;_&#x69;&#x6e;&#95;&#x76;&#x65;&#114;s&#105;&#111;&#110;=v2&#x2e;&#49;.0&amp;&#118;&#101;&#x72;&#98;&#x3d;&#80;&#79;&#83;&#84;&#38;u&#115;&#101;&#x72;&#x5f;&#105;d&#x3d;&#99;&#55;&#98;&#x36;&#99;&#98;&#52;&#55;&#x2d;c&#x62;&#x39;6&#x2d;&#x34;&#52;&#x34;1&#45;&#56;8&#48;&#x31;-&#51;&#53;&#x62;&#53;&#55;&#x34;&#53;6&#x37;5&#x33;&#97;&#38;&#117;&#115;e&#x72;&#95;&#x6e;&#97;&#109;&#101;&#61;&#x73;&#117;&#x73;&#97;&#110;&#x2e;&#x75;&#x6b;&#46;&#50;&#57;@e&#120;&#97;&#x6d;p&#108;&#101;&#46;&#x63;&#x6f;&#109;\">&#x30;&#49;.&#48;&#x30;&#48;&#x5a;&#x26;&#108;&#x69;m&#x69;t&#x3d;&#x31;&#48;0&#48;&#48;&#38;&#111;&#x66;&#x66;&#x73;e&#116;&#x3d;&#x30;&#38;&#97;&#110;&#x6f;&#x6e;&#x3d;&#102;&#x61;l&#115;&#101;&#38;&#x61;&#x70;&#x70;_na&#x6d;&#x65;&#x3d;&#x54;&#101;a&#x74;&#65;p&#x70;&#38;&#x69;&#x6d;p&#x6c;e&#x6d;e&#x6e;&#x74;&#x65;&#x64;_&#105;n&#x5f;v&#x65;&#x72;sio&#x6e;&#x3d;v&#x32;&#x2e;1.0&amp;&#118;&#101;&#x72;&#98;&#x3d;&#x50;&#x4f;&#x53;T&amp;&#117;s&#101;&#114;&#x5f;&#105;&#x64;&#x3d;&#x63;&#55;&#x62;6cb&#x34;&#55;&#x2d;&#99;b96-&#52;&#x34;&#x34;1-&#x38;&#56;&#48;&#49;&#x2d;3&#53;&#98;&#53;&#55;&#x34;&#53;&#54;75&#x33;a&#x26;&#x75;&#115;&#x65;&#x72;&#x5f;&#110;&#x61;me&#61;s&#117;&#115;&#97;&#x6e;&#46;&#117;&#107;&#46;&#50;&#x39;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6c;&#101;&#x2e;&#99;&#111;&#x6d;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MetricsJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/metrics/banks/{BANK_ID}", "method": "get", "description": "<p>Get the all metrics at the Bank specified by BANK_ID</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#x6d;&#x61;&#x69;lt&#x6f;&#x3a;0&#x31;&#46;&#x30;&#48;&#x30;&#90;&#x26;&#x6c;i&#x6d;i&#x74;&#61;&#49;&#x30;&#48;&#48;&#48;&#x26;&#111;ff&#x73;&#101;&#116;&#61;&#48;&#x26;a&#110;&#x6f;&#110;&#61;f&#x61;&#x6c;&#x73;&#x65;&#x26;a&#112;&#112;&#x5f;&#110;&#x61;&#109;&#x65;&#61;T&#101;&#x61;&#x74;Ap&#x70;&#38;&#x69;&#x6d;&#x70;l&#x65;m&#x65;&#110;&#116;&#101;&#100;&#x5f;&#x69;&#110;_&#x76;&#x65;&#114;&#x73;&#105;o&#x6e;&#x3d;&#118;&#x32;&#x2e;1&#46;&#48;&#x26;&#118;e&#114;&#x62;&#x3d;PO&#x53;&#84;&#38;u&#115;&#x65;&#x72;_&#x69;&#x64;&#61;&#x63;&#55;b&#54;&#99;b4&#55;&#x2d;c&#x62;&#57;&#54;&#45;&#x34;&#x34;4&#49;&#45;&#x38;80&#49;-&#51;&#53;&#98;&#x35;&#x37;&#52;&#53;&#x36;&#55;&#53;&#x33;&#x61;&amp;&#x75;&#x73;&#101;&#x72;&#x5f;&#110;&#97;&#109;&#101;=&#x73;&#x75;&#x73;&#97;&#110;&#46;&#x75;k&#x2e;&#50;&#57;@&#x65;&#120;&#97;m&#112;&#x6c;&#x65;&#x2e;&#99;o&#x6d;\">0&#x31;.&#x30;&#48;&#48;Z&#38;&#x6c;&#105;&#109;&#105;&#x74;&#x3d;&#x31;&#48;&#48;&#48;&#48;&#x26;o&#102;&#102;&#x73;&#x65;&#116;&#61;&#x30;&amp;&#x61;&#x6e;&#x6f;n&#x3d;&#102;&#97;&#108;&#115;&#101;&#38;&#97;&#x70;&#112;&#95;&#110;&#x61;m&#101;=&#x54;&#101;&#x61;&#116;&#65;pp&#38;&#x69;&#x6d;p&#108;&#101;m&#101;&#x6e;&#116;&#101;&#x64;&#x5f;i&#x6e;&#x5f;&#118;&#101;&#114;&#x73;i&#111;&#x6e;&#61;v2&#46;&#49;.0&#38;v&#x65;&#x72;&#98;&#x3d;&#80;&#79;&#83;T&#x26;&#x75;&#x73;&#x65;r_&#x69;&#x64;=&#99;&#55;&#98;&#54;&#99;&#x62;&#x34;&#x37;-&#x63;b&#x39;&#x36;&#45;&#x34;&#x34;&#x34;&#49;&#x2d;&#x38;&#56;&#48;1&#45;&#x33;&#53;&#x62;&#x35;&#55;&#x34;&#x35;&#54;&#x37;&#x35;3&#97;&#38;&#117;&#115;e&#x72;_n&#97;&#109;&#101;&#x3d;&#115;&#117;s&#x61;&#x6e;&#x2e;&#117;&#107;&#x2e;&#50;9&#x40;&#x65;&#x78;&#97;m&#112;&#108;e&#46;&#99;&#x6f;&#109;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MetricsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/metrics/top-apis", "method": "get", "description": "<p>Get metrics about the most popular APIs. e.g.: total count, response time (in ms), etc.</p><p>Should be able to filter on the following fields</p><p>eg: /management/metrics/top-apis?from_date=1970-01-01T00:00:00.000Z&amp;to_date=2024-05-15T12:58:25.400Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>1 from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z</p><p>2 to_date (defaults to the current date) eg:to_date=2024-05-15T12:58:25.400Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TopApisJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/metrics/top-consumers", "method": "get", "description": "<p>Get metrics about the top consumers of the API usage e.g. total count, consumer_id and app_name.</p><p>Should be able to filter on the following fields</p><p>e.g.: /management/metrics/top-consumers?from_date=1970-01-01T00:00:00.000Z&amp;to_date=2024-05-15T12:58:25.402Z&amp;consumer_id=5<br />&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null<br />&amp;limit=100</p><p>1 from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z</p><p>2 to_date (defaults to the current date) eg:to_date=2024-05-15T12:58:25.402Z</p><p>3 consumer_id  (if null ignore)</p><p>4 user_id (if null ignore)</p><p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>6 url (if null ignore), note: can not contain '&amp;'.</p><p>7 app_name (if null ignore)</p><p>8 implemented_by_partial_function (if null ignore),</p><p>9 implemented_in_version (if null ignore)</p><p>10 verb (if null ignore)</p><p>11 correlation_id (if null ignore)</p><p>12 duration (if null ignore) non digit chars will be silently omitted</p><p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p><p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p><p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p><p>16 limit (for pagination: defaults to 50)  eg:limit=200</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/TopConsumersJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system-dynamic-entities", "method": "get", "description": "<p>Get all System Dynamic Entities</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic_entities"], "properties": {"dynamic_entities": {"type": "array", "items": {"$ref": "#/definitions/DynamicEntityFooBar"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system-dynamic-entities", "method": "post", "description": "<p>Create a system level Dynamic Entity.</p><p>Authentication is Mandatory</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField20&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField21&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField22&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField23&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField24&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField25&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField26&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;122eb76c-fe33-40b0-917b-d871ffb9f0e8&quot;}&quot;someField27&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=122eb76c-fe33-40b0-917b-d871ffb9f0e8&amp;branchId=a8ce99ff-d531-4c18-bcf7-89fcf2f11e73&quot;}&quot;someField28&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=122eb76c-fe33-40b0-917b-d871ffb9f0e8&amp;atmId=a8ce99ff-d531-4c18-bcf7-89fcf2f11e73&quot;}&quot;someField29&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=122eb76c-fe33-40b0-917b-d871ffb9f0e8&amp;accountId=a8ce99ff-d531-4c18-bcf7-89fcf2f11e73&quot;}&quot;someField30&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=122eb76c-fe33-40b0-917b-d871ffb9f0e8&amp;productCode=a8ce99ff-d531-4c18-bcf7-89fcf2f11e73&quot;}&quot;someField31&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=122eb76c-fe33-40b0-917b-d871ffb9f0e8&amp;cardId=a8ce99ff-d531-4c18-bcf7-89fcf2f11e73&quot;}&quot;someField32&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=122eb76c-fe33-40b0-917b-d871ffb9f0e8&amp;accountId=a8ce99ff-d531-4c18-bcf7-89fcf2f11e73&amp;transactionId=4e119d7c-539a-4158-8c55-5bc9ebbfebc5&quot;}&quot;someField33&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=122eb76c-fe33-40b0-917b-d871ffb9f0e8&amp;accountId=a8ce99ff-d531-4c18-bcf7-89fcf2f11e73&amp;counterpartyId=4e119d7c-539a-4158-8c55-5bc9ebbfebc5&quot;}</code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>", "parameters": [{"in": "body", "name": "body", "description": "DynamicEntityFooBar object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}", "method": "delete", "description": "<p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "DYNAMIC_ENTITY_ID", "description": "the dynamic entity id ", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}", "method": "put", "description": "<p>Update a System Level Dynamic Entity.</p><p>Authentication is Mandatory</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField20&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField21&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField22&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField23&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField24&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField25&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField26&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;e1089f0b-8798-4df6-b045-378e38d83325&quot;}&quot;someField27&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=e1089f0b-8798-4df6-b045-378e38d83325&amp;branchId=71ea1170-59d8-4a0e-a627-61de906f2542&quot;}&quot;someField28&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=e1089f0b-8798-4df6-b045-378e38d83325&amp;atmId=71ea1170-59d8-4a0e-a627-61de906f2542&quot;}&quot;someField29&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=e1089f0b-8798-4df6-b045-378e38d83325&amp;accountId=71ea1170-59d8-4a0e-a627-61de906f2542&quot;}&quot;someField30&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=e1089f0b-8798-4df6-b045-378e38d83325&amp;productCode=71ea1170-59d8-4a0e-a627-61de906f2542&quot;}&quot;someField31&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=e1089f0b-8798-4df6-b045-378e38d83325&amp;cardId=71ea1170-59d8-4a0e-a627-61de906f2542&quot;}&quot;someField32&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=e1089f0b-8798-4df6-b045-378e38d83325&amp;accountId=71ea1170-59d8-4a0e-a627-61de906f2542&amp;transactionId=f19b8536-d7a1-4e44-821b-882d17fad7f5&quot;}&quot;someField33&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=e1089f0b-8798-4df6-b045-378e38d83325&amp;accountId=71ea1170-59d8-4a0e-a627-61de906f2542&amp;counterpartyId=f19b8536-d7a1-4e44-821b-882d17fad7f5&quot;}</code></pre>", "parameters": [{"in": "body", "name": "body", "description": "DynamicEntityFooBar object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, {"in": "path", "name": "DYNAMIC_ENTITY_ID", "description": "the dynamic entity id ", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system/integrity/account-access-unique-index-1-check", "method": "get", "description": "<p>Check unique index at account access table.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CheckSystemIntegrityJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system/integrity/banks/{BANK_ID}/account-currency-check", "method": "get", "description": "<p>Check for sensible currencies at Bank Account model</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CheckSystemIntegrityJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system/integrity/banks/{BANK_ID}/orphaned-account-check", "method": "get", "description": "<p>Check for orphaned accounts at Bank Account model</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CheckSystemIntegrityJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system/integrity/custom-view-names-check", "method": "get", "description": "<p>Check custom view names.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CheckSystemIntegrityJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/system/integrity/system-view-names-check", "method": "get", "description": "<p>Check system view names.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CheckSystemIntegrityJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/user/reset-password-url", "method": "post", "description": "<p>Create password reset url.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostResetPasswordUrlJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostResetPasswordUrlJsonV400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ResetPasswordUrlJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/users/current/consumers", "method": "get", "description": "<p>Get the Consumers for logged in User.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ConsumersJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/webui_props", "method": "get", "description": "<p>Get the all WebUiProps key values, those props key with &quot;webui_&quot; can be stored in DB, this endpoint get all from DB.</p><p>url query parameter:<br />active: It must be a boolean string. and If active = true, it will show<br />combination of explicit (inserted) + implicit (default)  method_routings.</p><p>eg:<br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/webui_props\">https://test.openbankproject.com/obp/v3.1.0/management/webui_props</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/webui_props?active=true\">https://test.openbankproject.com/obp/v3.1.0/management/webui_props?active=true</a></p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["webui_props"], "properties": {"webui_props": {"type": "array", "items": {"$ref": "#/definitions/WebUiPropsCommons"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/webui_props", "method": "post", "description": "<p>Create a WebUiProps.</p><p>Authentication is Mandatory</p><p>Explaination of Fields:</p><ul><li>name is required String value</li><li>value is required String value</li></ul><p>The line break and double quotations should do escape, example:</p><pre><code>{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this valuehave &quot;line break&quot; and double quotations.&quot;}</code></pre><p>should do escape like this:</p><pre><code>{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this value\\nhave \\&quot;line break\\&quot; and double quotations.&quot;}</code></pre><p>Insert image examples:</p><pre><code>// set width=100 and height=50{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;100&quot; height=&quot;50&quot; /&gt;&quot;}// only set height=50{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;&quot; height=&quot;50&quot; /&gt;&quot;}// only width=20%{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;20%&quot; height=&quot;&quot; /&gt;&quot;}</code></pre>", "parameters": [{"in": "body", "name": "body", "description": "WebUiPropsCommons object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/WebUiPropsCommons"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/WebUiPropsCommons"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/management/webui_props/{WEB_UI_PROPS_ID}", "method": "delete", "description": "<p>Delete a WebUiProps specified by WEB_UI_PROPS_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "WEB_UI_PROPS_ID", "description": "the web ui props id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/message-docs/CONNECTOR", "method": "get", "description": "<p>These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>: kafka_vSept2018, stored_procedure_vDec2019 ...</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MessageDocsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/message-docs/CONNECTOR/swagger2.0", "method": "get", "description": "<p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MessageDocsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/my/accounts", "method": "get", "description": "<p>Returns the list of accounts containing private views for the user.<br />Each account lists the views available to the user.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/my/accounts?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CoreAccountsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoint-ids/API_COLLECTION_ENDPOINT_ID", "method": "delete", "description": "<p>glossary-item-not-found<br />Delete Api Collection Endpoint<br />Delete Api Collection Endpoint By Id</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/Full"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints", "method": "get", "description": "<p>Get Api Collection Endpoints By API_COLLECTION_ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionEndpointsJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints", "method": "post", "description": "<p>Create Api Collection Endpoint By Id.</p><p>glossary-item-not-found</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostApiCollectionEndpointJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostApiCollectionEndpointJson400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionEndpointJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints/OPERATION_ID", "method": "delete", "description": "<p>glossary-item-not-found</p><p>Delete Api Collection Endpoint By OPERATION_ID</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/Full"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections", "method": "get", "description": "<p>Get all the apiCollections for logged in user.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionsJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections", "method": "post", "description": "<p>Create Api Collection for logged in user.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostApiCollectionJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostApiCollectionJson400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections/API_COLLECTION_ID", "method": "delete", "description": "<p>Delete Api Collection By API_COLLECTION_ID</p><p>glossary-item-not-found</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/Full"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections/API_COLLECTION_ID", "method": "get", "description": "<p>Get Api Collection By API_COLLECTION_ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections/API_COLLECTION_ID", "method": "put", "description": "<p>Update Api Collection for logged in user.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostApiCollectionJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostApiCollectionJson400"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints", "method": "get", "description": "<p>Get Api Collection Endpoints By API_COLLECTION_NAME.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionEndpointsJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints", "method": "post", "description": "<p>Create Api Collection Endpoint.</p><p>glossary-item-not-found</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostApiCollectionEndpointJson400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostApiCollectionEndpointJson400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionEndpointJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints/OPERATION_ID", "method": "delete", "description": "<p>glossary-item-not-found</p><p>Delete Api Collection Endpoint By OPERATION_ID</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/Full"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints/OPERATION_ID", "method": "get", "description": "<p>Get Api Collection Endpoint By API_COLLECTION_NAME and OPERATION_ID.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionEndpointJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotFoundByUserId"}}}}, {"path": "/obp/v5.1.0/my/api-collections/name/API_COLLECTION_NAME", "method": "get", "description": "<p>Get Api Collection By API_COLLECTION_NAME.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account", "method": "get", "description": "<p>Information returned about the account specified by ACCOUNT_ID:</p><ul><li>Number - The human readable account number given by the bank that identifies the account.</li><li>Label - A label given by the owner of the account</li><li>Owners - Users that own this account</li><li>Type - The type of account</li><li>Balance - Currency and Value</li><li>Account Routings - A list that might include IBAN or national account identifiers</li><li>Account Rules - A list that might include Overdraft and other bank specific rules</li><li>Tags - A list of Tags assigned to this account</li></ul><p>This call returns the owner view and requires access to that view.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ModeratedCoreAccountJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions", "method": "get", "description": "<p>Returns transactions list (Core info) of the account specified by ACCOUNT_ID.</p><p>Authentication is Mandatory</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li><li>to_date=DATE =&gt; example value: 2024-05-15T12:58:25.377Z. NOTE! The default value is now (2024-05-15T12:58:25.377Z).</li></ul><p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p><p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>", "parameters": [{"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}, {"in": "path", "name": "BANK_ID", "description": "The bank id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CoreTransactionsJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorFilterSortDirectionError"}}}}, {"path": "/obp/v5.1.0/my/consent/current", "method": "delete", "description": "<p>Revoke Consent specified by Consent-Id at Request Header</p><p>There are a few reasons you might need to revoke an application\u2019s access to a user\u2019s account:<br />- The user explicitly wishes to revoke the application\u2019s access<br />- You as the service provider have determined an application is compromised or malicious, and want to disable it<br />- etc.</p><p>OBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.<br />The status of the token is changed to &quot;REVOKED&quot; so the next time the revoked client makes a request, their token will fail to validate.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/ConsentJsonV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/correlated-entities", "method": "get", "description": "<p>Correlated Entities are users and customers linked to the currently authenticated user via User-Customer-Links</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CorrelatedEntities"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/customers", "method": "get", "description": "<p>Gets all Customers that are linked to me.</p><p>Authentication via OAuth is required.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerJsonV210"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/dynamic-endpoints", "method": "get", "description": "<p>Get My Dynamic Endpoints.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic_endpoints"], "properties": {"dynamic_endpoints": {"type": "array", "items": {"type": "object", "properties": {"user_id": {"type": "string", "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"}, "dynamic_endpoint_id": {"type": "string", "example": "dynamic-endpoint-id"}, "swagger_string": {"type": "object", "properties": {"swagger": {"type": "string", "example": "2.0"}}, "required": ["swagger"]}}, "required": ["user_id", "dynamic_endpoint_id", "swagger_string"]}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/dynamic-endpoints/DYNAMIC_ENDPOINT_ID", "method": "delete", "description": "<p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/dynamic-entities", "method": "get", "description": "<p>Get all my Dynamic Entities.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "required": ["dynamic_entities"], "properties": {"dynamic_entities": {"type": "array", "items": {"$ref": "#/definitions/DynamicEntityFooBar"}}}}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}", "method": "delete", "description": "<p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "DYNAMIC_ENTITY_ID", "description": "the dynamic entity id ", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}", "method": "put", "description": "<p>Update my DynamicEntity.</p><p>Authentication is Mandatory</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:FishPort&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:FooBar&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:sustrans&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:SimonCovid&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:CovidAPIDays&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:customer_cars&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:MarchHare&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:InsurancePolicy&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:Odometer&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:InsurancePremium&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:ObpActivity&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:test1&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:D-Entity1&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:test_daniel707&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField20&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField21&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField22&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField23&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField24&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField25&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField26&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;efd2fd02-84b2-4a26-a4c4-2139362d893f&quot;}&quot;someField27&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=efd2fd02-84b2-4a26-a4c4-2139362d893f&amp;branchId=89c18b43-b0b4-4854-82e3-212527bd37b3&quot;}&quot;someField28&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=efd2fd02-84b2-4a26-a4c4-2139362d893f&amp;atmId=89c18b43-b0b4-4854-82e3-212527bd37b3&quot;}&quot;someField29&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=efd2fd02-84b2-4a26-a4c4-2139362d893f&amp;accountId=89c18b43-b0b4-4854-82e3-212527bd37b3&quot;}&quot;someField30&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=efd2fd02-84b2-4a26-a4c4-2139362d893f&amp;productCode=89c18b43-b0b4-4854-82e3-212527bd37b3&quot;}&quot;someField31&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=efd2fd02-84b2-4a26-a4c4-2139362d893f&amp;cardId=89c18b43-b0b4-4854-82e3-212527bd37b3&quot;}&quot;someField32&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=efd2fd02-84b2-4a26-a4c4-2139362d893f&amp;accountId=89c18b43-b0b4-4854-82e3-212527bd37b3&amp;transactionId=2d5ef690-d38a-4b28-bb39-58cde6598753&quot;}&quot;someField33&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=efd2fd02-84b2-4a26-a4c4-2139362d893f&amp;accountId=89c18b43-b0b4-4854-82e3-212527bd37b3&amp;counterpartyId=2d5ef690-d38a-4b28-bb39-58cde6598753&quot;}</code></pre>", "parameters": [{"in": "body", "name": "body", "description": "DynamicEntityFooBar object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, {"in": "path", "name": "DYNAMIC_ENTITY_ID", "description": "the dynamic entity id ", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DynamicEntityFooBar"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/entitlement-requests", "method": "get", "description": "<p>Get Entitlement Requests for the current User.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementRequestsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/entitlements", "method": "get", "description": "<p>Get Entitlements for the current User.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementJSONs"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/mtls/certificate/current", "method": "get", "description": "<p>Provide client's certificate info of a current call specified by PSD2-CERT value at Request Header</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CertificateInfoJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/spaces", "method": "get", "description": "<p>Get My Spaces.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MySpaces"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/user/attributes", "method": "get", "description": "<p>Get My Personal User Attributes.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserAttributesResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/user/attributes", "method": "post", "description": "<p>Create My Personal User Attribute</p><p>The <code>type</code> field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UserAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UserAttributeJsonV400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserAttributeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/my/user/attributes/USER_ATTRIBUTE_ID", "method": "put", "description": "<p>Update My Personal User Attribute for current user by USER_ATTRIBUTE_ID</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UserAttributeJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UserAttributeJsonV400"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserAttributeResponseJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/rate-limiting", "method": "get", "description": "<p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Note: Rate limiting can be set at the Consumer level and also for anonymous calls.</p><p>See the consumer rate limits / call limits endpoints.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RateLimitingInfoV310"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/regulated-entities", "method": "get", "description": "<p>Returns information about:</p><ul><li>Regulated Entities</li></ul><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RegulatedEntitiesJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/regulated-entities", "method": "post", "description": "<p>Create Regulated Entity</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "RegulatedEntityPostJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/RegulatedEntityPostJsonV510"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/RegulatedEntitiesJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/regulated-entities/REGULATED_ENTITY_ID", "method": "delete", "description": "<p>Delete Regulated Entity specified by REGULATED_ENTITY_ID</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/regulated-entities/REGULATED_ENTITY_ID", "method": "get", "description": "<p>Get Regulated Entity By REGULATED_ENTITY_ID</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/RegulatedEntitiesJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/resource-docs/{API_VERSION}/obp", "method": "get", "description": "<p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en_GB and es_ES at the moment.</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Dynamic Resource Docs are cached, TTL is 3600 seconds<br />Static Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=es_ES</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "API_VERSION", "description": "eg:v2.2.0, v3.0.0", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceDocsJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/resource-docs/{API_VERSION}/swagger", "method": "get", "description": "<p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Note: Resource Docs are cached, TTL is 3600 seconds</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "API_VERSION", "description": "eg:v2.2.0, v3.0.0", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/roles", "method": "get", "description": "<p>Returns all available roles</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AvailableRolesJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/root", "method": "get", "description": "<p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git Commit</li></ul><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/APIInfoJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/sandbox/data-import", "method": "post", "description": "<p>Import bulk data into the sandbox (Authenticated access).</p><p>This call can be used to create banks, users, accounts and transactions which are stored in the local RDBMS.</p><p>The user needs to have CanCreateSandbox entitlement.</p><p>Note: This is a monolithic call. You could also use a combination of endpoints including create bank, create user, create account and create transaction request to create similar data.</p><p>An example of an import set of data (json) can be found <a href=\"https://raw.githubusercontent.com/OpenBankProject/OBP-API/develop/obp-api/src/main/scala/code/api/sandbox/example_data/2016-04-28/example_import.json\">here</a><br />Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "SandboxDataImport object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/SandboxDataImport"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SuccessMessage"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/search/metrics", "method": "get", "description": "<p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/search/warehouse/{INDEX}", "method": "post", "description": "<p>Search the data warehouse and get row level results.</p><p>Authentication is Mandatory</p><p>CanSearchWarehouse entitlement is required. You can request the Role below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p><p>POST /search/warehouse/INDEX1,INDEX2</p><p>POST /search/warehouse/ALL</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>", "parameters": [{"in": "body", "name": "body", "description": "ElasticSearchJsonV300 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ElasticSearchJsonV300"}}, {"in": "path", "name": "INDEX", "description": "the elastic search index", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/search/warehouse/statistics/{INDEX}/{FIELD}", "method": "post", "description": "<p>Search the data warehouse and get statistical aggregations over a warehouse field</p><p>Does a stats aggregation over some numeric field:</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p><p>Authentication is Mandatory</p><p>CanSearchWarehouseStats Role is required. You can request this below.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>Examples of usage:</p><p>POST /search/warehouse/statistics/INDEX/FIELD</p><p>POST /search/warehouse/statistics/ALL/FIELD</p><p>{ Any valid elasticsearch query DSL in the body }</p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>", "parameters": [{"in": "body", "name": "body", "description": "ElasticSearchJsonV300 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/ElasticSearchJsonV300"}}, {"in": "path", "name": "FIELD", "description": "the elastic search field", "required": true, "type": "string"}, {"in": "path", "name": "INDEX", "description": "the elastic search index", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/system-views", "method": "post", "description": "<p>Create a system view</p><p>Authentication is Mandatory and the user needs to have access to the CanCreateSystemView entitlement.<br />The 'alias' field in the JSON can take one of two values:</p><ul><li><em>public</em>: to use the public alias if there is one specified for the other account.</li><li><em>private</em>: to use the public alias if there is one specified for the other account.</li><li><p><em>''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p></li></ul><p>The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p><p>The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p><p>Please note that system views cannot be public. In case you try to set it you will get the error OBP-30258: System view cannot be public</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateViewJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateViewJsonV500"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/ViewJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/system-views-ids", "method": "get", "description": "<p>Get Ids of System Views</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewsIdsJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/system-views/{VIEW_ID}", "method": "delete", "description": "<p>Deletes the system view specified by VIEW_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/system-views/{VIEW_ID}", "method": "get", "description": "<p>Get System View</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/system-views/{VIEW_ID}", "method": "put", "description": "<p>Update an existing view on a bank account</p><p>Authentication is Mandatory and the user needs to have access to the owner view.</p><p>The json sent is the same as during view creation (above), with one difference: the 'name' field<br />of a view is not editable (it is only set when a view is created)</p>", "parameters": [{"in": "body", "name": "body", "description": "UpdateViewJsonV500 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UpdateViewJsonV500"}}, {"in": "path", "name": "VIEW_ID", "description": "The view id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorInvalidJsonFormat"}}}}, {"path": "/obp/v5.1.0/transaction-request-types/CARD/transaction-requests", "method": "post", "description": "<p>When using CARD, the payee is set in the request body .</p><p>Money goes into the Counterparty in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />In case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; COMPLETED<br />In case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />INITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p><p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p><p>Rule for calculating number of security challenges:<br />If product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />In case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://test-explorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "TransactionRequestBodyCardJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/TransactionRequestBodyCardJsonV400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/TransactionRequestWithChargeJSON400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/transactions/{TRANSACTION_ID}/balancing-transaction", "method": "get", "description": "<p>Get Balancing Transaction</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "TRANSACTION_ID", "description": "The transaction id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DoubleEntryTransactionJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/ui/suggested-session-timeout", "method": "get", "description": "<p>Returns information about:</p><ul><li>Suggested session timeout in case of a user inactivity</li></ul><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/SuggestedSessionTimeoutV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/user-entitlements", "method": "post", "description": "<p>This endpoint is used as part of the DAuth solution to grant Entitlements for Roles to a smart contract on the blockchain.</p><p>Put the smart contract address in username</p><p>For provider use &quot;dauth&quot;</p><p>This endpoint will create the User with username and provider if the User does not already exist.</p><p>Then it will create Entitlements i.e. grant Roles to the User.</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>i.e. Entitlements are used to create / consume system or bank level resources where as views / account access are used to consume / create customer level resources.</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Note: The Roles actually granted will depend on the Roles that the calling user has.</p><p>If you try to grant Entitlements to a user that already exist (duplicate entitilements) you will get an error.</p><p>For information about DAuth see below:</p><details>  <summary style=\"display:list-item;cursor:s-resize;\">DAuth</summary>  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3><p>DAuth is an experimental authentication mechanism that aims to pin an ethereum or other blockchain Smart Contract to an OBP &quot;User&quot;.</p><p>In the future, it might be possible to be more specific and pin specific actors (wallets) that are acting within the smart contract, but so far, one smart contract acts on behalf of one User.</p><p>Thus, if a smart contract &quot;X&quot; calls the OBP API using the DAuth header, OBP will get or create a user called X and the call will proceed in the context of that User &quot;X&quot;.</p><p>DAuth is invoked by the REST client (caller) including a specific header (see step 3 below) in any OBP REST call.</p><p>When OBP receives the DAuth token, it creates or gets a User with a username based on the smart_contract_address and the provider based on the network_name. The combination of username and provider is unique in OBP.</p><p>If you are calling OBP-API via an API3 Airnode, the Airnode will take care of constructing the required header.</p><p>When OBP detects a DAuth header / token it first checks if the Consumer is allowed to make such a call. OBP will validate the Consumer ip address and signature etc.</p><p>Note: The DAuth flow does <em>not</em> require an explicit POST like Direct Login to create the token.</p><p>Permissions may be assigned to an OBP User at any time, via the UserAuthContext, Views, Entitlements to Roles or Consents.</p><p>Note: <em>DAuth is NOT enabled on this instance!</em></p><p>Note: <em>The DAuth client is responsible for creating a token which will be trusted by OBP absolutely</em>!</p><p>To use DAuth:</p><h3><a href=\"#1-configure-obp-api-to-accept-dauth\" id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept DAuth.</a></h3><p>Set up properties in your props file</p><pre><code># -- DAuth --------------------------------------# Define secret used to validate JWT token# jwt.public_key_rsa=path-to-the-pem-file# Enable/Disable DAuth communication at all# In case isn't defined default value is false# allow_dauth=false# Define comma separated list of allowed IP addresses# dauth.host=127.0.0.1# -------------------------------------- DAuth--</code></pre><p>Please keep in mind that property jwt.public_key_rsa is used to validate JWT token to check it is not changed or corrupted during transport.</p><h3><a href=\"#2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create / have access to a JWT</a></h3><p>The following videos are available:<br />* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p><p>HEADER:ALGORITHM &amp; TOKEN TYPE</p><pre><code>{  &quot;alg&quot;: &quot;RS256&quot;,  &quot;typ&quot;: &quot;JWT&quot;}</code></pre><p>PAYLOAD:DATA</p><pre><code>{  &quot;smart_contract_address&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,  &quot;network_name&quot;: &quot;AIRNODE.TESTNET.ETHEREUM&quot;,  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,  &quot;request_id&quot;: &quot;0Xe876987694328763492876348928736497869273649&quot;}</code></pre><p>VERIFY SIGNATURE</p><pre><code>RSASHA256(  base64UrlEncode(header) + &quot;.&quot; +  base64UrlEncode(payload),<p>) your-RSA-key-pair</p></code></pre><p>Here is an example token:</p><pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</code></pre><h3><a href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\">3) Try a REST call using the header</a></h3><p>Using your favorite http client:</p><p>GET <a href=\"https://test.openbankproject.com/obp/v3.0.0/users/current\">https://test.openbankproject.com/obp/v3.0.0/users/current</a></p><p>Body</p><p>Leave Empty!</p><p>Headers:</p><pre><code>   DAuth: your-jwt-from-step-above</code></pre><p>Here is it all together:</p><p>GET <a href=\"https://test.openbankproject.com/obp/v3.0.0/users/current\">https://test.openbankproject.com/obp/v3.0.0/users/current</a> HTTP/1.1<br />Host: localhost:8080<br />User-Agent: curl/7.47.0<br />Accept: <em>/</em><br />DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p><p>CURL example</p><pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k' https://test.openbankproject.com/obp/v3.0.0/users/current</code></pre><p>You should receive a response like:</p><pre><code>{    &quot;user_id&quot;: &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,    &quot;email&quot;: &quot;&quot;,    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,    &quot;provider&quot;: &quot;ETHEREUM&quot;,    &quot;username&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,    &quot;entitlements&quot;: {        &quot;list&quot;: []    }}</code></pre><h3><a href=\"#under-the-hood\" id=\"under-the-hood\">Under the hood</a></h3><p>The file, dauth.scala handles the DAuth,</p><p>We:</p><pre><code>-&gt; Check if Props allow_dauth is true  -&gt; Check if DAuth header exists    -&gt; Check if getRemoteIpAddress is OK      -&gt; Look for &quot;token&quot;        -&gt; parse the JWT token and getOrCreate the user          -&gt; get the data of the user</code></pre><h3><a href=\"#more-information\" id=\"more-information\">More information</a></h3><p>Parameter names and values are case sensitive.<br />Each parameter MUST NOT appear more than once per request.</p></details><p><br></br></p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostCreateUserWithRolesJsonV400 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostCreateUserWithRolesJsonV400"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users", "method": "get", "description": "<p>Get all users</p><p>Authentication is Mandatory</p><p>CanGetAnyUser entitlement is required,</p><p>Possible custom url parameters for pagination:</p><ul><li>limit=NUMBER ==&gt; default value: 500</li><li>offset=NUMBER ==&gt; default value: 0</li></ul><p>eg1:?limit=100&amp;offset=0</p><ul><li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li></ul><p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p><ul><li>locked_status (if null ignore)</li></ul>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsersJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users", "method": "post", "description": "<p>Creates OBP user.<br />No authorisation (currently) required.</p><p>Mimics current webform to Register.</p><p>Requires username(email) and password.</p><p>Returns 409 error if username not unique.</p><p>May require validation of email address.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateUserJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateUserJson"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserJsonV200"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{PROVIDER}/{USERNAME}/lock-status", "method": "get", "description": "<p>Get User Login Status.<br />Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "PROVIDER", "description": "the user PROVIDER", "required": true, "type": "string"}, {"in": "path", "name": "USERNAME", "description": "the user name", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BadLoginStatusJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{PROVIDER}/{USERNAME}/lock-status", "method": "put", "description": "<p>Unlock a User.</p><p>(Perhaps the user was locked due to multiple failed login attempts)</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "PROVIDER", "description": "the user PROVIDER", "required": true, "type": "string"}, {"in": "path", "name": "USERNAME", "description": "the user name", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/BadLoginStatusJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{PROVIDER}/{USERNAME}/locks", "method": "post", "description": "<p>Lock a User.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "PROVIDER", "description": "the user PROVIDER", "required": true, "type": "string"}, {"in": "path", "name": "USERNAME", "description": "the user name", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserLockStatusJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}", "method": "delete", "description": "<p>Delete a User.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/account-access", "method": "get", "description": "<p>Get Account Access by USER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AccountsMinimalJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/api-collections", "method": "get", "description": "<p>Get Api Collections for User.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ApiCollectionsJson400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotFoundByUserId"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/attributes", "method": "get", "description": "<p>Get User Attributes for the user defined via USER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserWithAttributesResponseJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/auth-context", "method": "delete", "description": "<p>Delete the Auth Contexts of a User specified by USER_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/auth-context", "method": "get", "description": "<p>Get User Auth Contexts for a User.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserAuthContextJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/auth-context", "method": "post", "description": "<p>Create User Auth Context. These key value pairs will be propagated over connector to adapter. Normally used for mapping OBP user and<br />Bank User/Customer.<br />Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "PostUserAuthContextJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/PostUserAuthContextJson"}}, {"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserAuthContextJsonV500"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/auth-context/{USER_AUTH_CONTEXT_ID}", "method": "delete", "description": "<p>Delete a User AuthContext of the User specified by USER_AUTH_CONTEXT_ID.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_AUTH_CONTEXT_ID", "description": "the user auth context id", "required": true, "type": "string"}, {"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/entitlement-requests", "method": "get", "description": "<p>Get Entitlement Requests for a User.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementRequestsJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/entitlement/{ENTITLEMENT_ID}", "method": "delete", "description": "<p>Delete Entitlement specified by ENTITLEMENT_ID for an user specified by USER_ID</p><p>Authentication is required and the user needs to be a Super Admin.<br />Super Admins are listed in the Props file.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "EmptyClassJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/EmptyClassJson"}}, {"in": "path", "name": "ENTITLEMENT_ID", "description": "The entitblement id", "required": true, "type": "string"}, {"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success", "schema": {"$ref": "#/definitions/EmptyClassJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/entitlements", "method": "get", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementsJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/entitlements", "method": "post", "description": "<p>Create Entitlement. Grant Role to User.</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p><p>Authentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "CreateEntitlementJSON object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/CreateEntitlementJSON"}}, {"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/EntitlementJSON"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/entitlements-and-permissions", "method": "get", "description": "<p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/non-personal/attributes", "method": "get", "description": "<p>Get Non Personal User Attribute for a user specified by USER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/non-personal/attributes", "method": "post", "description": "<p>Create Non Personal User Attribute</p><p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "UserAttributeJsonV510 object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/UserAttributeJsonV510"}}, {"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserAttributeResponseJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/non-personal/attributes/USER_ATTRIBUTE_ID", "method": "delete", "description": "<p>Delete the Non Personal User Attribute specified by ENTITLEMENT_REQUEST_ID for a user specified by USER_ID</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"204": {"description": "Success"}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/{USER_ID}/refresh", "method": "post", "description": "<p>The endpoint is used for updating the accounts, views, account holders for the user.<br />As to the Json body, you can leave it as Empty.<br />This call will get data from backend, no need to prepare the json body in api side.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/RefreshUserJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserHasMissingRoles"}}}}, {"path": "/obp/v5.1.0/users/current", "method": "get", "description": "<p>Get the logged in user</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/current/customers", "method": "get", "description": "<p>Gets all Customers that are linked to a User.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomersWithAttributesJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/current/customers/customer_ids", "method": "get", "description": "<p>Gets all Customers Ids that are linked to a User.</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomersWithAttributesJsonV300"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/current/logout-link", "method": "get", "description": "<p>Get the Logout Link</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/LogoutLinkJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/current/user_id", "method": "get", "description": "<p>Get the USER_ID of the logged in user</p><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserIdJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/email/EMAIL/terminator", "method": "get", "description": "<p>Get users by email address</p><p>Authentication is Mandatory<br />CanGetAnyUser entitlement is required,</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UsersJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/provider/{PROVIDER}/username/{USERNAME}", "method": "get", "description": "<p>Get user by PROVIDER and USERNAME</p><p>Authentication is Mandatory</p><p>CanGetAnyUser entitlement is required,</p>", "parameters": [{"in": "path", "name": "PROVIDER", "description": "the user PROVIDER", "required": true, "type": "string"}, {"in": "path", "name": "USERNAME", "description": "the user name", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/users/user_id/{USER_ID}", "method": "get", "description": "<p>Get user by USER_ID</p><p>Authentication is Mandatory<br />CanGetAnyUser entitlement is required,</p>", "parameters": [{"in": "path", "name": "USER_ID", "description": "The user id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserJsonV400"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v5.1.0/waiting-for-godot", "method": "get", "description": "<p>Waiting For Godot</p><p>Uses query parameter &quot;sleep&quot; in milliseconds.<br />For instance: .../waiting-for-godot?sleep=50 means postpone response in 50 milliseconds.</p><p>Authentication is Optional</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/WaitingForGodotJsonV510"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/obp/v5.1.0/web-hooks/account/notifications/on-create-transaction", "method": "post", "description": "<p>Create a notification Webhook that will fire for all accounts on the system.</p><p>Webhooks are used to call external web services when certain events happen.</p><p>For instance, a webhook can be used to notify an external service if a transaction is created on an account.</p><p>When an account notification webhook fires it will POST to the URL you specify during the creation of the webhook.</p><p>Inside the payload you will find account_id and transaction_id and also user_ids and customer_ids of the Users / Customers linked to the Account.</p><p>The webhook will POST the following structure to your service:</p><p>{<br />&quot;event_name&quot;: &quot;OnCreateTransaction&quot;,<br />&quot;event_id&quot;: &quot;9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />&quot;account_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;transaction_id&quot;: &quot;7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;related_entities&quot;: [<br />{<br />&quot;user_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />&quot;customer_ids&quot;: [&quot;3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;]<br />}<br />]<br />}</p><p>Thus, your service should accept the above POST body structure.</p><p>In this way, your web service can be informed about an event on an account and act accordingly.</p><p>Further information about the account, transaction or related entities can then be retrieved using the standard REST APIs.</p><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "AccountNotificationWebhookPostJson object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/AccountNotificationWebhookPostJson"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/SystemAccountNotificationWebhookJson"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/CovidAPIDays", "method": "get", "description": "<p>Get Covid APIDays List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /CovidAPIDays?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"covid_api_days_list": {"type": "array", "items": {"type": "object", "properties": {"covid_api_days": {"type": "object", "properties": {"covidAPIDaysId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["covidAPIDaysId", "name", "number"]}}, "required": ["covid_api_days"]}}}, "required": ["covid_api_days_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/CovidAPIDays", "method": "post", "description": "<p>Create new Covid APIDays.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"covid_api_days": {"type": "object", "properties": {"covidAPIDaysId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["covidAPIDaysId", "name", "number"]}}, "required": ["covid_api_days"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/CovidAPIDays/COVID_API_DAYS_ID", "method": "delete", "description": "<p>Delete Covid APIDays by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"covid_api_days": {"type": "object", "properties": {"covidAPIDaysId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["covidAPIDaysId", "name", "number"]}}, "required": ["covid_api_days"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/CovidAPIDays/COVID_API_DAYS_ID", "method": "get", "description": "<p>Get Covid APIDays by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"covid_api_days": {"type": "object", "properties": {"covidAPIDaysId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["covidAPIDaysId", "name", "number"]}}, "required": ["covid_api_days"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/CovidAPIDays/COVID_API_DAYS_ID", "method": "put", "description": "<p>Update Covid APIDays.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;CovidAPIDays&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"covid_api_days": {"type": "object", "properties": {"covidAPIDaysId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["covidAPIDaysId", "name", "number"]}}, "required": ["covid_api_days"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FishPort", "method": "get", "description": "<p>Get Fish Port List.</p><p>Portfolio of fishbased values</p><p><strong>Property List:</strong></p><ul><li>fish: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /FishPort?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"fish_port_list": {"type": "array", "items": {"type": "object", "properties": {"fish_port": {"type": "object", "properties": {"fishPortId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fishPortId", "fish", "number"]}}, "required": ["fish_port"]}}}, "required": ["fish_port_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FishPort", "method": "post", "description": "<p>Create new Fish Port.</p><p>Portfolio of fishbased values</p><p><strong>Property List:</strong></p><ul><li>fish: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fish", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"fish_port": {"type": "object", "properties": {"fishPortId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fishPortId", "fish", "number"]}}, "required": ["fish_port"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FishPort/FISH_PORT_ID", "method": "delete", "description": "<p>Delete Fish Port by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fish", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"fish_port": {"type": "object", "properties": {"fishPortId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fishPortId", "fish", "number"]}}, "required": ["fish_port"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FishPort/FISH_PORT_ID", "method": "get", "description": "<p>Get Fish Port by id.</p><p>Portfolio of fishbased values</p><p><strong>Property List:</strong></p><ul><li>fish: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"fish_port": {"type": "object", "properties": {"fishPortId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fishPortId", "fish", "number"]}}, "required": ["fish_port"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FishPort/FISH_PORT_ID", "method": "put", "description": "<p>Update Fish Port.</p><p>Portfolio of fishbased values</p><p><strong>Property List:</strong></p><ul><li>fish: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FishPort&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fish", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"fish_port": {"type": "object", "properties": {"fishPortId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "fish": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "6987233228"}}, "required": ["fishPortId", "fish", "number"]}}, "required": ["fish_port"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FooBar", "method": "get", "description": "<p>Get Foo Bar List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /FooBar?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"foo_bar_list": {"type": "array", "items": {"type": "object", "properties": {"foo_bar": {"type": "object", "properties": {"fooBarId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["fooBarId", "name", "number"]}}, "required": ["foo_bar"]}}}, "required": ["foo_bar_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FooBar", "method": "post", "description": "<p>Create new Foo Bar.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"foo_bar": {"type": "object", "properties": {"fooBarId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["fooBarId", "name", "number"]}}, "required": ["foo_bar"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FooBar/FOO_BAR_ID", "method": "delete", "description": "<p>Delete Foo Bar by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"foo_bar": {"type": "object", "properties": {"fooBarId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["fooBarId", "name", "number"]}}, "required": ["foo_bar"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FooBar/FOO_BAR_ID", "method": "get", "description": "<p>Get Foo Bar by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"foo_bar": {"type": "object", "properties": {"fooBarId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["fooBarId", "name", "number"]}}, "required": ["foo_bar"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/FooBar/FOO_BAR_ID", "method": "put", "description": "<p>Update Foo Bar.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;FooBar&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"foo_bar": {"type": "object", "properties": {"fooBarId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["fooBarId", "name", "number"]}}, "required": ["foo_bar"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/SimonCovid", "method": "get", "description": "<p>Get Simon Covid List.</p><p>Let's put Covid99 stuff here</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /SimonCovid?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"simon_covid_list": {"type": "array", "items": {"type": "object", "properties": {"simon_covid": {"type": "object", "properties": {"simonCovidId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["simonCovidId", "name", "number"]}}, "required": ["simon_covid"]}}}, "required": ["simon_covid_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/SimonCovid", "method": "post", "description": "<p>Create new Simon Covid.</p><p>Let's put Covid99 stuff here</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"simon_covid": {"type": "object", "properties": {"simonCovidId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["simonCovidId", "name", "number"]}}, "required": ["simon_covid"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/SimonCovid/SIMON_COVID_ID", "method": "delete", "description": "<p>Delete Simon Covid by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"simon_covid": {"type": "object", "properties": {"simonCovidId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["simonCovidId", "name", "number"]}}, "required": ["simon_covid"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/SimonCovid/SIMON_COVID_ID", "method": "get", "description": "<p>Get Simon Covid by id.</p><p>Let's put Covid99 stuff here</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"simon_covid": {"type": "object", "properties": {"simonCovidId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["simonCovidId", "name", "number"]}}, "required": ["simon_covid"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/SimonCovid/SIMON_COVID_ID", "method": "put", "description": "<p>Update Simon Covid.</p><p>Let's put Covid99 stuff here</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;SimonCovid&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"simon_covid": {"type": "object", "properties": {"simonCovidId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["simonCovidId", "name", "number"]}}, "required": ["simon_covid"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/D-Entity1", "method": "get", "description": "<p>Get D Entity1 List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /D-Entity1?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "d-entity1_list": {"type": "array", "items": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "d-entity1": {"type": "object", "properties": {"d-Entity1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["d-Entity1Id", "name", "number"]}}, "required": ["bank-id", "d-entity1"]}}}, "required": ["bank-id", "d-entity1_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/D-Entity1", "method": "post", "description": "<p>Create new D Entity1.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "d-entity1": {"type": "object", "properties": {"d-Entity1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["d-Entity1Id", "name", "number"]}}, "required": ["bank-id", "d-entity1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/D-Entity1/D-ENTITY1_ID", "method": "delete", "description": "<p>Delete D Entity1 by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "d-entity1": {"type": "object", "properties": {"d-Entity1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["d-Entity1Id", "name", "number"]}}, "required": ["bank-id", "d-entity1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/D-Entity1/D-ENTITY1_ID", "method": "get", "description": "<p>Get D Entity1 by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "d-entity1": {"type": "object", "properties": {"d-Entity1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["d-Entity1Id", "name", "number"]}}, "required": ["bank-id", "d-entity1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/D-Entity1/D-ENTITY1_ID", "method": "put", "description": "<p>Update D Entity1.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;D-Entity1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "d-entity1": {"type": "object", "properties": {"d-Entity1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["d-Entity1Id", "name", "number"]}}, "required": ["bank-id", "d-entity1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePolicy", "method": "get", "description": "<p>Get Insurance Policy List.</p><p>Which insurance policies the customer already has.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /InsurancePolicy?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_policy_list": {"type": "array", "items": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_policy": {"type": "object", "properties": {"insurancePolicyId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePolicyId", "name", "number"]}}, "required": ["bank-id", "insurance_policy"]}}}, "required": ["bank-id", "insurance_policy_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePolicy", "method": "post", "description": "<p>Create new Insurance Policy.</p><p>Which insurance policies the customer already has.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_policy": {"type": "object", "properties": {"insurancePolicyId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePolicyId", "name", "number"]}}, "required": ["bank-id", "insurance_policy"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePolicy/INSURANCE_POLICY_ID", "method": "delete", "description": "<p>Delete Insurance Policy by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_policy": {"type": "object", "properties": {"insurancePolicyId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePolicyId", "name", "number"]}}, "required": ["bank-id", "insurance_policy"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePolicy/INSURANCE_POLICY_ID", "method": "get", "description": "<p>Get Insurance Policy by id.</p><p>Which insurance policies the customer already has.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_policy": {"type": "object", "properties": {"insurancePolicyId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePolicyId", "name", "number"]}}, "required": ["bank-id", "insurance_policy"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePolicy/INSURANCE_POLICY_ID", "method": "put", "description": "<p>Update Insurance Policy.</p><p>Which insurance policies the customer already has.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePolicy&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_policy": {"type": "object", "properties": {"insurancePolicyId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePolicyId", "name", "number"]}}, "required": ["bank-id", "insurance_policy"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePremium", "method": "get", "description": "<p>Get Insurance Premium List.</p><p>Retrive the premium for the customer.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /InsurancePremium?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_premium_list": {"type": "array", "items": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_premium": {"type": "object", "properties": {"insurancePremiumId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePremiumId", "name", "number"]}}, "required": ["bank-id", "insurance_premium"]}}}, "required": ["bank-id", "insurance_premium_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePremium", "method": "post", "description": "<p>Create new Insurance Premium.</p><p>Retrive the premium for the customer.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_premium": {"type": "object", "properties": {"insurancePremiumId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePremiumId", "name", "number"]}}, "required": ["bank-id", "insurance_premium"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePremium/INSURANCE_PREMIUM_ID", "method": "delete", "description": "<p>Delete Insurance Premium by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_premium": {"type": "object", "properties": {"insurancePremiumId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePremiumId", "name", "number"]}}, "required": ["bank-id", "insurance_premium"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePremium/INSURANCE_PREMIUM_ID", "method": "get", "description": "<p>Get Insurance Premium by id.</p><p>Retrive the premium for the customer.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_premium": {"type": "object", "properties": {"insurancePremiumId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePremiumId", "name", "number"]}}, "required": ["bank-id", "insurance_premium"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/InsurancePremium/INSURANCE_PREMIUM_ID", "method": "put", "description": "<p>Update Insurance Premium.</p><p>Retrive the premium for the customer.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;InsurancePremium&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "insurance_premium": {"type": "object", "properties": {"insurancePremiumId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["insurancePremiumId", "name", "number"]}}, "required": ["bank-id", "insurance_premium"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/MarchHare", "method": "get", "description": "<p>Get March Hare List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /MarchHare?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "march_hare_list": {"type": "array", "items": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "march_hare": {"type": "object", "properties": {"marchHareId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["marchHareId", "name", "number"]}}, "required": ["bank-id", "march_hare"]}}}, "required": ["bank-id", "march_hare_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/MarchHare", "method": "post", "description": "<p>Create new March Hare.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "march_hare": {"type": "object", "properties": {"marchHareId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["marchHareId", "name", "number"]}}, "required": ["bank-id", "march_hare"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/MarchHare/MARCH_HARE_ID", "method": "delete", "description": "<p>Delete March Hare by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "march_hare": {"type": "object", "properties": {"marchHareId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["marchHareId", "name", "number"]}}, "required": ["bank-id", "march_hare"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/MarchHare/MARCH_HARE_ID", "method": "get", "description": "<p>Get March Hare by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "march_hare": {"type": "object", "properties": {"marchHareId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["marchHareId", "name", "number"]}}, "required": ["bank-id", "march_hare"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/MarchHare/MARCH_HARE_ID", "method": "put", "description": "<p>Update March Hare.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;MarchHare&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "march_hare": {"type": "object", "properties": {"marchHareId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["marchHareId", "name", "number"]}}, "required": ["bank-id", "march_hare"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/Odometer", "method": "get", "description": "<p>Get Odometer List.</p><p>Verify odometer information for flexible contracts.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /Odometer?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "odometer_list": {"type": "array", "items": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "odometer": {"type": "object", "properties": {"odometerId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["odometerId", "name", "number"]}}, "required": ["bank-id", "odometer"]}}}, "required": ["bank-id", "odometer_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/Odometer", "method": "post", "description": "<p>Create new Odometer.</p><p>Verify odometer information for flexible contracts.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "odometer": {"type": "object", "properties": {"odometerId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["odometerId", "name", "number"]}}, "required": ["bank-id", "odometer"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/Odometer/ODOMETER_ID", "method": "delete", "description": "<p>Delete Odometer by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "odometer": {"type": "object", "properties": {"odometerId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["odometerId", "name", "number"]}}, "required": ["bank-id", "odometer"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/Odometer/ODOMETER_ID", "method": "get", "description": "<p>Get Odometer by id.</p><p>Verify odometer information for flexible contracts.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "odometer": {"type": "object", "properties": {"odometerId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["odometerId", "name", "number"]}}, "required": ["bank-id", "odometer"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/gh.29.uk/Odometer/ODOMETER_ID", "method": "put", "description": "<p>Update Odometer.</p><p>Verify odometer information for flexible contracts.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;Odometer&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "odometer": {"type": "object", "properties": {"odometerId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["odometerId", "name", "number"]}}, "required": ["bank-id", "odometer"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/obp.testing.01/ObpActivity", "method": "get", "description": "<p>Get Obp Activity List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>username: description of <strong>name</strong> field, can be markdown text.</li><li>created_date: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /ObpActivity?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "obp_activity_list": {"type": "array", "items": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "obp_activity": {"type": "object", "properties": {"obpActivityId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["obpActivityId", "name", "username", "created_date"]}}, "required": ["bank-id", "obp_activity"]}}}, "required": ["bank-id", "obp_activity_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/obp.testing.01/ObpActivity", "method": "post", "description": "<p>Create new Obp Activity.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>username: description of <strong>name</strong> field, can be markdown text.</li><li>created_date: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["name", "username", "created_date"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "obp_activity": {"type": "object", "properties": {"obpActivityId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["obpActivityId", "name", "username", "created_date"]}}, "required": ["bank-id", "obp_activity"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/obp.testing.01/ObpActivity/OBP_ACTIVITY_ID", "method": "delete", "description": "<p>Delete Obp Activity by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["name", "username", "created_date"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "obp_activity": {"type": "object", "properties": {"obpActivityId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["obpActivityId", "name", "username", "created_date"]}}, "required": ["bank-id", "obp_activity"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/obp.testing.01/ObpActivity/OBP_ACTIVITY_ID", "method": "get", "description": "<p>Get Obp Activity by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>username: description of <strong>name</strong> field, can be markdown text.</li><li>created_date: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "obp_activity": {"type": "object", "properties": {"obpActivityId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["obpActivityId", "name", "username", "created_date"]}}, "required": ["bank-id", "obp_activity"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/banks/obp.testing.01/ObpActivity/OBP_ACTIVITY_ID", "method": "put", "description": "<p>Update Obp Activity.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>username: description of <strong>name</strong> field, can be markdown text.</li><li>created_date: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;ObpActivity&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["name", "username", "created_date"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"bank-id": {"type": "string", "example": "gh.29.uk"}, "obp_activity": {"type": "object", "properties": {"obpActivityId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "username": {"type": "string", "example": "James Brown"}, "created_date": {"type": "string", "example": "698761728"}}, "required": ["obpActivityId", "name", "username", "created_date"]}}, "required": ["bank-id", "obp_activity"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/customer_cars", "method": "get", "description": "<p>Get Customer Cars List.</p><p>The car the customer arrived in</p><p><strong>Property List:</strong></p><ul><li>customer_identifier: description of <strong>customer_identifier</strong> field, can be markdown text.</li><li>manufacturer: description of <strong>manufacturer</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /customer_cars?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"customer_cars_list": {"type": "array", "items": {"type": "object", "properties": {"customer_cars": {"type": "object", "properties": {"customer_carsId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_carsId", "customer_identifier", "manufacturer"]}}, "required": ["customer_cars"]}}}, "required": ["customer_cars_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/customer_cars", "method": "post", "description": "<p>Create new Customer Cars.</p><p>The car the customer arrived in</p><p><strong>Property List:</strong></p><ul><li>customer_identifier: description of <strong>customer_identifier</strong> field, can be markdown text.</li><li>manufacturer: description of <strong>manufacturer</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_identifier", "manufacturer"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"customer_cars": {"type": "object", "properties": {"customer_carsId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_carsId", "customer_identifier", "manufacturer"]}}, "required": ["customer_cars"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/customer_cars/CUSTOMER_CARS_ID", "method": "delete", "description": "<p>Delete Customer Cars by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_identifier", "manufacturer"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"customer_cars": {"type": "object", "properties": {"customer_carsId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_carsId", "customer_identifier", "manufacturer"]}}, "required": ["customer_cars"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/customer_cars/CUSTOMER_CARS_ID", "method": "get", "description": "<p>Get Customer Cars by id.</p><p>The car the customer arrived in</p><p><strong>Property List:</strong></p><ul><li>customer_identifier: description of <strong>customer_identifier</strong> field, can be markdown text.</li><li>manufacturer: description of <strong>manufacturer</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"customer_cars": {"type": "object", "properties": {"customer_carsId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_carsId", "customer_identifier", "manufacturer"]}}, "required": ["customer_cars"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/customer_cars/CUSTOMER_CARS_ID", "method": "put", "description": "<p>Update Customer Cars.</p><p>The car the customer arrived in</p><p><strong>Property List:</strong></p><ul><li>customer_identifier: description of <strong>customer_identifier</strong> field, can be markdown text.</li><li>manufacturer: description of <strong>manufacturer</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;customer_cars&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_identifier", "manufacturer"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"customer_cars": {"type": "object", "properties": {"customer_carsId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "customer_identifier": {"type": "string", "example": "bc37e0fb-b75b-48d3-8fe9-c94ff064aa9a"}, "manufacturer": {"type": "string", "example": "BMW"}}, "required": ["customer_carsId", "customer_identifier", "manufacturer"]}}, "required": ["customer_cars"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/my/test_daniel707", "method": "get", "description": "<p>Get My Test Daniel707 List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /test_daniel707?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707_list": {"type": "array", "items": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}}, "required": ["test_daniel707_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/my/test_daniel707", "method": "post", "description": "<p>Create new My Test Daniel707.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/my/test_daniel707/TEST_DANIEL707_ID", "method": "delete", "description": "<p>Delete My Test Daniel707 by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/my/test_daniel707/TEST_DANIEL707_ID", "method": "get", "description": "<p>Get My Test Daniel707 by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/my/test_daniel707/TEST_DANIEL707_ID", "method": "put", "description": "<p>Update My Test Daniel707.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v4.0.0/accounts", "method": "post", "description": "<p>POST Accounts</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEndpointProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;url_pattern&quot;,        &quot;value&quot;:&quot;http://obp_mock//accounts&quot;    },    {        &quot;key&quot;:&quot;http_method&quot;,        &quot;value&quot;:&quot;POST&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "family account"}, "balance": {"type": "integer", "format": "int32", "example": "1"}}, "required": ["name", "balance"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/obp/v4.0.0/accounts/{ACCOUNT_ID}", "method": "get", "description": "<p>Get Bank Account</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEndpointProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;url_pattern&quot;,        &quot;value&quot;:&quot;http://obp_mock//accounts/{account_id}&quot;    },    {        &quot;key&quot;:&quot;http_method&quot;,        &quot;value&quot;:&quot;GET&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "path", "name": "ACCOUNT_ID", "description": "The account id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "family account"}, "balance": {"type": "integer", "format": "int32", "example": "1"}}, "required": ["name", "balance"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/sustrans", "method": "get", "description": "<p>Get Sustrans List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /sustrans?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"sustrans_list": {"type": "array", "items": {"type": "object", "properties": {"sustrans": {"type": "object", "properties": {"sustransId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["sustransId", "name", "number"]}}, "required": ["sustrans"]}}}, "required": ["sustrans_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/sustrans", "method": "post", "description": "<p>Create new Sustrans.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"sustrans": {"type": "object", "properties": {"sustransId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["sustransId", "name", "number"]}}, "required": ["sustrans"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/sustrans/SUSTRANS_ID", "method": "delete", "description": "<p>Delete Sustrans by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"sustrans": {"type": "object", "properties": {"sustransId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["sustransId", "name", "number"]}}, "required": ["sustrans"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/sustrans/SUSTRANS_ID", "method": "get", "description": "<p>Get Sustrans by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"sustrans": {"type": "object", "properties": {"sustransId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["sustransId", "name", "number"]}}, "required": ["sustrans"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/sustrans/SUSTRANS_ID", "method": "put", "description": "<p>Update Sustrans.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;sustrans&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"sustrans": {"type": "object", "properties": {"sustransId": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["sustransId", "name", "number"]}}, "required": ["sustrans"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test-dynamic-resource-doc/my_user/MY_USER_ID", "method": "post", "description": "<p>A test endpoint.</p><p>Just for debug method body of dynamic resource doc.<br />better watch the following introduction video first<br />* <a href=\"https://vimeo.com/623381607\">Dynamic resourceDoc version1</a></p><p>The endpoint return the response from PractiseEndpoint code.<br />Here, code.api.DynamicEndpoints.dynamic.practise.PractiseEndpoint.process<br />You can test the method body grammar, and try the business logic, but need to restart the OBP-API code .</p><p>Authentication is Optional</p>", "parameters": [{"in": "body", "name": "body", "description": "RequestRootJsonClass object that needs to be added.", "required": true, "schema": {"$ref": "#/definitions/RequestRootJsonClass"}}], "responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/RequestRootJsonClass"}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUnknownError"}}}}, {"path": "/test1", "method": "get", "description": "<p>Get Test1 List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /test1?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test1_list": {"type": "array", "items": {"type": "object", "properties": {"test1": {"type": "object", "properties": {"test1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test1Id", "name", "number"]}}, "required": ["test1"]}}}, "required": ["test1_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test1", "method": "post", "description": "<p>Create new Test1.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"test1": {"type": "object", "properties": {"test1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test1Id", "name", "number"]}}, "required": ["test1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test1/TEST1_ID", "method": "delete", "description": "<p>Delete Test1 by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"test1": {"type": "object", "properties": {"test1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test1Id", "name", "number"]}}, "required": ["test1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test1/TEST1_ID", "method": "get", "description": "<p>Get Test1 by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test1": {"type": "object", "properties": {"test1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test1Id", "name", "number"]}}, "required": ["test1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test1/TEST1_ID", "method": "put", "description": "<p>Update Test1.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test1&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test1": {"type": "object", "properties": {"test1Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test1Id", "name", "number"]}}, "required": ["test1"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test_daniel707", "method": "get", "description": "<p>Get Test Daniel707 List.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p><p>Can do filter on the fields<br />e.g: /test_daniel707?name=James%20Brown&amp;number=123.456&amp;number=11.11<br />Will do filter by this rule: name == &quot;James Brown&quot; &amp;&amp; (number==123.456 || number=11.11)</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707_list": {"type": "array", "items": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}}, "required": ["test_daniel707_list"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test_daniel707", "method": "post", "description": "<p>Create new Test Daniel707.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"201": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test_daniel707/TEST_DANIEL707_ID", "method": "delete", "description": "<p>Delete Test Daniel707 by id</p><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"204": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test_daniel707/TEST_DANIEL707_ID", "method": "get", "description": "<p>Get Test Daniel707 by id.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}, {"path": "/test_daniel707/TEST_DANIEL707_ID", "method": "put", "description": "<p>Update Test Daniel707.</p><p>Description of this entity, can be markdown text.</p><p><strong>Property List:</strong></p><ul><li>name: description of <strong>name</strong> field, can be markdown text.</li><li>number: description of <strong>number</strong> field, can be markdown text.</li></ul><p>MethodRouting settings example:</p><details><pre><code>{  &quot;is_bank_id_exact_match&quot;:false,  &quot;method_name&quot;:&quot;dynamicEntityProcess&quot;,  &quot;connector_name&quot;:&quot;rest_vMar2019&quot;,  &quot;bank_id_pattern&quot;:&quot;.*&quot;,  &quot;parameters&quot;:[    {        &quot;key&quot;:&quot;entityName&quot;,        &quot;value&quot;:&quot;test_daniel707&quot;    }    {        &quot;key&quot;:&quot;url&quot;,        &quot;value&quot;:&quot;http://mydomain.com/xxx&quot;    }  ]}</code></pre></details><p>Authentication is Mandatory</p>", "parameters": [{"in": "body", "name": "body", "description": "JObject object that needs to be added.", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["name", "number"]}}], "responses": {"200": {"description": "Success", "schema": {"type": "object", "properties": {"test_daniel707": {"type": "object", "properties": {"test_daniel707Id": {"type": "string", "example": "d8839721-ad8f-45dd-9f78-2080414b93f9"}, "name": {"type": "string", "example": "James Brown"}, "number": {"type": "integer", "format": "int32", "example": "698761728"}}, "required": ["test_daniel707Id", "name", "number"]}}, "required": ["test_daniel707"]}}, "400": {"description": "Error", "schema": {"$ref": "#/definitions/ErrorUserNotLoggedIn"}}}}]